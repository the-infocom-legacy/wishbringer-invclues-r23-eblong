

	.FUNCT	GO
START::

?FCN:	GETB	0,30 >HOST
	GETB	0,33 >WIDTH
	SET	'HERE,HILLTOP
	ICALL1	INIT-STATUS-LINE
	SET	'WINNER,PROTAGONIST
	CALL	QUEUE,I-PROMPT-1,1
	PUT	STACK,0,1
	CALL	QUEUE,I-PROMPT-2,10
	PUT	STACK,0,1
	CALL	QUEUE,I-CRISP-CALLING,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-VOSS-CALLING,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-BARKING,-1
	PUT	STACK,0,1
	CALL	QUEUE,I-BEFORE-FIVE,-1
	PUT	STACK,0,1
	ICALL1	RESET-THEM
	CRLF	
	ICALL1	INTRO
	PRINTI	" Thermofax.

Only your Magick sword can save you now. You swing it high, speak the Word and stand unhurt as the blade absorbs the searing dragon breath.

The reptile bellows with rage and flaps its wings to fan the fire in its belly. You are advancing, sword poised to strike, when a familiar voice shatters the daydream and stays your mighty hand..."
	CRLF	
	CRLF	
	ICALL1	V-VERSION
	CRLF	
	ICALL1	V-LOOK
	ICALL1	SOMEBODY-CALLING
	ICALL1	DO-MAIN-LOOP
	JUMP	?FCN


	.FUNCT	DO-MAIN-LOOP,X
?PRG1:	CALL1	MAIN-LOOP >X
	JUMP	?PRG1


	.FUNCT	MAIN-LOOP,TRASH
?PRG1:	CALL1	MAIN-LOOP-1 >TRASH
	JUMP	?PRG1


	.FUNCT	MAIN-LOOP-1,ICNT,OCNT,NUM,CNT,OBJ,TBL,V,PTBL,OBJ1,TMP,X,?TMP1
	SET	'CNT,0
	SET	'OBJ,FALSE-VALUE
	SET	'PTBL,TRUE-VALUE
	CALL1	PARSER >P-WON
	ZERO?	P-WON /?CCL3
	GET	P-PRSI,P-MATCHLEN >ICNT
	GET	P-PRSO,P-MATCHLEN >OCNT
	ZERO?	P-IT-OBJECT /?CND4
	CALL2	ACCESSIBLE?,P-IT-OBJECT
	ZERO?	STACK /?CND4
	SET	'TMP,FALSE-VALUE
?PRG8:	IGRTR?	'CNT,ICNT /?REP9
	GET	P-PRSI,CNT
	EQUAL?	STACK,IT \?PRG8
	PUT	P-PRSI,CNT,P-IT-OBJECT
	SET	'TMP,TRUE-VALUE
?REP9:	ZERO?	TMP \?CND15
	SET	'CNT,0
?PRG17:	IGRTR?	'CNT,OCNT /?CND15
	GET	P-PRSO,CNT
	EQUAL?	STACK,IT \?PRG17
	PUT	P-PRSO,CNT,P-IT-OBJECT
?CND15:	SET	'CNT,0
?CND4:	ZERO?	OCNT \?CCL26
	SET	'NUM,OCNT
	JUMP	?CND24
?CCL26:	GRTR?	OCNT,1 \?CCL28
	SET	'TBL,P-PRSO
	ZERO?	ICNT \?CCL31
	SET	'OBJ,FALSE-VALUE
	JUMP	?CND29
?CCL31:	GET	P-PRSI,1 >OBJ
?CND29:	SET	'NUM,OCNT
	JUMP	?CND24
?CCL28:	GRTR?	ICNT,1 \?CCL33
	SET	'PTBL,FALSE-VALUE
	SET	'TBL,P-PRSI
	GET	P-PRSO,1 >OBJ
	SET	'NUM,ICNT
	JUMP	?CND24
?CCL33:	SET	'NUM,1
?CND24:	ZERO?	OBJ \?CND34
	EQUAL?	ICNT,1 \?CND34
	GET	P-PRSI,1 >OBJ
?CND34:	EQUAL?	PRSA,V?WALK \?CCL40
	CALL	PERFORM,PRSA,PRSO >V
	JUMP	?CND38
?CCL40:	ZERO?	NUM \?CCL42
	GETB	P-SYNTAX,P-SBITS
	BAND	STACK,P-SONUMS
	ZERO?	STACK \?CCL45
	CALL2	PERFORM,PRSA >V
	SET	'PRSO,FALSE-VALUE
	JUMP	?CND38
?CCL45:	ZERO?	LIT \?CCL47
	ICALL1	PCLEAR
	ICALL1	TOO-DARK
	JUMP	?CND38
?CCL47:	ICALL1	PCLEAR
	PRINTI	"[There isn't anything to "
	GET	P-ITBL,P-VERBN >TMP
	EQUAL?	PRSA,V?TELL \?CCL52
	PRINTI	"talk to"
	JUMP	?PRG59
?CCL52:	ZERO?	P-MERGED \?CTR55
	ZERO?	P-OFLAG /?CCL56
?CTR55:	GET	TMP,0
	PRINTB	STACK
	JUMP	?PRG59
?CCL56:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	CALL	WORD-PRINT,?TMP1,STACK >V
?PRG59:	PRINTI	".]"
	CRLF	
	SET	'V,FALSE-VALUE
	JUMP	?CND38
?CCL42:	SET	'P-NOT-HERE,0
	SET	'P-MULT,FALSE-VALUE
	GRTR?	NUM,1 \?CND61
	SET	'P-MULT,TRUE-VALUE
?CND61:	SET	'TMP,0
?PRG63:	IGRTR?	'CNT,NUM \?CCL67
	GRTR?	P-NOT-HERE,0 \?CCL70
	PRINTI	"[The "
	EQUAL?	P-NOT-HERE,NUM /?PRG77
	PRINTI	"other "
?PRG77:	PRINTI	"object"
	EQUAL?	P-NOT-HERE,1 /?PRG83
	PRINTC	115
?PRG83:	PRINTI	" that you mentioned "
	EQUAL?	P-NOT-HERE,1 /?PRG90
	PRINTI	"are"
	JUMP	?PRG92
?PRG90:	PRINTI	"is"
?PRG92:	PRINTI	"n't here.]"
	CRLF	
	JUMP	?CND38
?CCL70:	ZERO?	TMP \?CND38
	ICALL1	REFERRING
	JUMP	?CND38
?CCL67:	ZERO?	PTBL /?CCL97
	GET	P-PRSO,CNT >OBJ1
	JUMP	?CND95
?CCL97:	GET	P-PRSI,CNT >OBJ1
?CND95:	ZERO?	PTBL /?CCL100
	SET	'PRSO,OBJ1
	JUMP	?CND98
?CCL100:	SET	'PRSO,OBJ
?CND98:	ZERO?	PTBL /?CCL103
	SET	'PRSI,OBJ
	JUMP	?CND101
?CCL103:	SET	'PRSI,OBJ1
?CND101:	GRTR?	NUM,1 /?CCL105
	GET	P-ITBL,P-NC1
	GET	STACK,0
	EQUAL?	STACK,W?ALL,W?EVERYTHING \?CND104
?CCL105:	CALL2	DONT-ALL,OBJ1
	ZERO?	STACK \?PRG63
	CALL2	ACCESSIBLE?,OBJ1
	ZERO?	STACK /?PRG63
	EQUAL?	OBJ1,PROTAGONIST /?PRG63
	EQUAL?	OBJ1,IT \?CCL117
	FSET?	P-IT-OBJECT,NARTICLEBIT /?CND118
	PRINTI	"The "
?CND118:	PRINTD	P-IT-OBJECT
	JUMP	?PRG126
?CCL117:	FSET?	OBJ1,NARTICLEBIT /?CND122
	PRINTI	"The "
?CND122:	PRINTD	OBJ1
?PRG126:	PRINTI	": "
?CND104:	SET	'TMP,TRUE-VALUE
	CALL	PERFORM,PRSA,PRSO,PRSI >V
	EQUAL?	V,M-FATAL \?PRG63
?CND38:	EQUAL?	V,M-FATAL \?CND130
	SET	'P-CONT,FALSE-VALUE
?CND130:	CALL1	GAME-VERB?
	ZERO?	STACK \?CND1
	EQUAL?	PRSA,V?TELL /?CND1
	ZERO?	P-WON /?CND1
	LOC	WINNER
	GETP	STACK,P?ACTION
	CALL	STACK,M-END >V
	JUMP	?CND1
?CCL3:	SET	'P-CONT,FALSE-VALUE
?CND1:	ZERO?	P-WON /FALSE
	CALL1	GAME-VERB?
	ZERO?	STACK \?CND140
	CALL1	CLOCKER >V
?CND140:	SET	'P-PRSA-WORD,FALSE-VALUE
	SET	'PRSA,FALSE-VALUE
	SET	'PRSO,FALSE-VALUE
	SET	'PRSI,FALSE-VALUE
	RETURN	PRSI


	.FUNCT	DONT-ALL,OBJ1,L
	LOC	OBJ1 >L
	EQUAL?	OBJ1,NOT-HERE-OBJECT \?CCL3
	INC	'P-NOT-HERE
	RTRUE	
?CCL3:	EQUAL?	PRSA,V?TAKE \?CCL5
	ZERO?	PRSI /?CCL5
	IN?	PRSO,PRSI \TRUE
?CCL5:	CALL2	ACCESSIBLE?,OBJ1
	ZERO?	STACK /TRUE
	EQUAL?	P-GETFLAGS,P-ALL \FALSE
	ZERO?	PRSI /?CCL15
	EQUAL?	PRSO,PRSI /TRUE
?CCL15:	EQUAL?	PRSA,V?TAKE \?CCL19
	FSET?	OBJ1,TAKEBIT /?CCL22
	FSET?	OBJ1,TRYTAKEBIT \TRUE
?CCL22:	EQUAL?	L,WINNER,HERE,PRSI /?CCL26
	LOC	WINNER
	EQUAL?	L,STACK /?CCL26
	FSET?	L,SURFACEBIT \TRUE
	FSET?	L,TAKEBIT /TRUE
	RFALSE	
?CCL26:	ZERO?	PRSI \FALSE
	CALL2	ULTIMATELY-IN?,PRSO
	ZERO?	STACK /FALSE
	RTRUE	
?CCL19:	EQUAL?	PRSA,V?PUT-ON,V?PUT,V?DROP /?PRD41
	EQUAL?	PRSA,V?SGIVE,V?GIVE \?CCL39
?PRD41:	IN?	OBJ1,WINNER \TRUE
?CCL39:	EQUAL?	PRSA,V?PUT-ON,V?PUT \FALSE
	IN?	PRSO,WINNER /FALSE
	CALL	ULTIMATELY-IN?,PRSO,PRSI
	ZERO?	STACK \TRUE
	RFALSE	


	.FUNCT	ENABLED?,RTN,C,E
	ADD	C-TABLE,C-TABLELEN >E
	ADD	C-TABLE,C-INTS >C
?PRG1:	EQUAL?	C,E /FALSE
	GET	C,C-RTN
	EQUAL?	STACK,RTN \?CND3
	GET	C,C-ENABLED?
	ZERO?	STACK /FALSE
	RTRUE	
?CND3:	ADD	C,C-INTLEN >C
	JUMP	?PRG1


	.FUNCT	GAME-VERB?,V
	ZERO?	V \?CND1
	SET	'V,PRSA
?CND1:	EQUAL?	V,V?BRIEF,V?SCORE,V?VERBOSE /TRUE
	EQUAL?	V,V?QUIT,V?RESTART,V?RESTORE /TRUE
	EQUAL?	V,V?SAVE,V?SCRIPT,V?SUPER-BRIEF /TRUE
	EQUAL?	V,V?TELL,V?UNSCRIPT,V?VERSION /TRUE
	EQUAL?	V,V?TIME,V?HINT,V?HINTS-NO /TRUE
	EQUAL?	V,V?SOUND,V?NOTIFY,V?$REFRESH /TRUE
	EQUAL?	V,V?$VERIFY /TRUE
	RFALSE	


	.FUNCT	SPOKEN-TO,WHO
	ICALL1	PCLEAR
	PRINTI	"[spoken to "
	ICALL	ARTICLE,WHO,TRUE-VALUE
	PRINTD	WHO
	PRINTR	"]"


	.FUNCT	ACCESSIBLE?,OBJ
	FSET?	OBJ,INVISIBLE /FALSE
	CALL2	META-LOC,OBJ
	EQUAL?	STACK,WINNER,HERE,GLOBAL-OBJECTS /TRUE
	CALL2	VISIBLE?,OBJ
	ZERO?	STACK /FALSE
	RTRUE	


	.FUNCT	VISIBLE?,OBJ,L
	LOC	OBJ >L
	ZERO?	L /FALSE
	FSET?	OBJ,INVISIBLE /FALSE
	EQUAL?	L,GLOBAL-OBJECTS /FALSE
	EQUAL?	L,PROTAGONIST,HERE,WINNER /TRUE
	EQUAL?	L,LOCAL-GLOBALS \?CCL11
	CALL	GLOBAL-IN?,OBJ,HERE
	ZERO?	STACK \TRUE
?CCL11:	CALL2	SEE-INSIDE?,L
	ZERO?	STACK /FALSE
	CALL2	VISIBLE?,L
	ZERO?	STACK /FALSE
	RTRUE	


	.FUNCT	SEE-INSIDE?,CONTAINER
	FSET?	CONTAINER,SURFACEBIT /TRUE
	FSET?	CONTAINER,CONTBIT \?CCL5
	FSET?	CONTAINER,OPENBIT /TRUE
	FSET?	CONTAINER,TRANSBIT /TRUE
	RFALSE	
?CCL5:	FSET?	CONTAINER,ACTORBIT \FALSE
	EQUAL?	CONTAINER,PROTAGONIST /FALSE
	RTRUE	


	.FUNCT	META-LOC,OBJ
?PRG1:	ZERO?	OBJ /FALSE
	IN?	OBJ,GLOBAL-OBJECTS \?CCL7
	RETURN	GLOBAL-OBJECTS
?CCL7:	IN?	OBJ,ROOMS \?CCL9
	RETURN	OBJ
?CCL9:	FSET?	OBJ,INVISIBLE /FALSE
	LOC	OBJ >OBJ
	JUMP	?PRG1


	.FUNCT	QUEUE,RTN,TICK,CINT
	CALL2	INT,RTN >CINT
	PUT	CINT,C-TICK,TICK
	RETURN	CINT


	.FUNCT	INT,RTN,DEMON,E,C,INT
	ADD	C-TABLE,C-TABLELEN >E
	ADD	C-TABLE,C-INTS >C
?PRG1:	EQUAL?	C,E \?CCL5
	SUB	C-INTS,C-INTLEN >C-INTS
	ZERO?	DEMON /?PEN6
	SUB	C-DEMONS,C-INTLEN >C-DEMONS
?PEN6:	ADD	C-TABLE,C-INTS >INT
	PUT	INT,C-RTN,RTN
	RETURN	INT
?CCL5:	GET	C,C-RTN
	EQUAL?	STACK,RTN \?CND3
	RETURN	C
?CND3:	ADD	C,C-INTLEN >C
	JUMP	?PRG1


	.FUNCT	CLOCKER,C,E,I,TICK,FLG
	ZERO?	CLOCK-WAIT /?CND1
	SET	'CLOCK-WAIT,FALSE-VALUE
	RFALSE	
?CND1:	ZERO?	P-WON /?CCL5
	PUSH	C-INTS
	JUMP	?CND3
?CCL5:	PUSH	C-DEMONS
?CND3:	ADD	C-TABLE,STACK >C
	ADD	C-TABLE,C-TABLELEN >E
	ZERO?	ECLIPSE? /?PRG12
	CALL2	INT,I-ECLIPSE >I
	GET	I,C-ENABLED?
	ZERO?	STACK /?PRG12
	GET	I,C-TICK
	LESS?	STACK,2 \?PRG12
	GET	I,C-RTN
	ICALL	STACK
?PRG12:	EQUAL?	C,E \?CCL16
	INC	'MOVES
	EQUAL?	HERE,INSIDE-SHOPPE \?CCL18
	FSET?	CLOCK,RMUNGBIT /?CCL18
	RETURN	FLG
?CCL18:	IGRTR?	'MINUTES,59 /?CCL22
	RETURN	FLG
?CCL22:	SET	'MINUTES,0
	IGRTR?	'HOURS,23 /?CCL24
	RETURN	FLG
?CCL24:	SET	'HOURS,0
	RETURN	FLG
?CCL16:	GET	C,C-ENABLED?
	ZERO?	STACK /?CND14
	GET	C,C-TICK >TICK
	ZERO?	TICK /?CND14
	SUB	TICK,1
	PUT	C,C-TICK,STACK
	GRTR?	TICK,1 /?CND14
	GET	C,C-RTN
	CALL	STACK
	ZERO?	STACK /?CND14
	SET	'FLG,TRUE-VALUE
?CND14:	ADD	C,C-INTLEN >C
	JUMP	?PRG12


	.FUNCT	CARRIAGE-RETURNS,CNT
	SET	'CNT,22
	ICALL1	RESET-THEM
?PRG1:	CRLF	
	DEC	'CNT
	ZERO?	CNT \?PRG1
	RTRUE	


	.FUNCT	RESET-THEM
	ICALL1	PCLEAR
	SET	'P-IT-OBJECT,NOT-HERE-OBJECT
	SET	'P-HIM-OBJECT,NOT-HERE-OBJECT
	SET	'P-HER-OBJECT,NOT-HERE-OBJECT
	SET	'P-THEM-OBJECT,NOT-HERE-OBJECT
	RETURN	P-THEM-OBJECT


	.FUNCT	PCLEAR
	SET	'P-CONT,FALSE-VALUE
	SET	'QUOTE-FLAG,FALSE-VALUE
	RETURN	QUOTE-FLAG

	.ENDI
