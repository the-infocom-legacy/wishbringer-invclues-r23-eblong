

	.FUNCT	PARSER,PTR,WRD,VAL,VERB,BOTTOM,OMERGED,OWINNER,LEN,DIR,NW,LW,CNT,?TMP2,?TMP1
	SET	'PTR,P-LEXSTART
	SET	'CNT,-1
?PRG1:	IGRTR?	'CNT,P-ITBLLEN /?REP2
	ZERO?	P-OFLAG \?CND6
	GET	P-ITBL,CNT
	PUT	P-OTBL,CNT,STACK
?CND6:	PUT	P-ITBL,CNT,0
	JUMP	?PRG1
?REP2:	SET	'OMERGED,P-MERGED
	SET	'OWINNER,WINNER
	SET	'P-MERGED,FALSE-VALUE
	PUT	P-PRSO,P-MATCHLEN,0
	PUT	P-PRSI,P-MATCHLEN,0
	PUT	P-BUTS,P-MATCHLEN,0
	ZERO?	QUOTE-FLAG \?CND8
	EQUAL?	WINNER,PROTAGONIST /?CND8
	SET	'WINNER,PROTAGONIST
	LOC	WINNER
	FSET?	STACK,VEHBIT /?CND12
	LOC	WINNER >HERE
?CND12:	CALL2	LIT?,HERE >LIT
?CND8:	ZERO?	RESERVE-PTR /?CCL16
	SET	'PTR,RESERVE-PTR
	ICALL	STUFF,P-LEXV,RESERVE-LEXV
	ICALL	INBUF-STUFF,P-INBUF,RESERVE-INBUF
	ZERO?	SUPER-BRIEF \?CND17
	EQUAL?	PROTAGONIST,WINNER \?CND17
	CRLF	
?CND17:	SET	'RESERVE-PTR,FALSE-VALUE
	SET	'P-CONT,FALSE-VALUE
	JUMP	?CND14
?CCL16:	ZERO?	P-CONT /?CCL22
	SET	'PTR,P-CONT
	EQUAL?	PROTAGONIST,WINNER \?CND14
	ZERO?	SUPER-BRIEF \?CND14
	CRLF	
	JUMP	?CND14
?CCL22:	SET	'WINNER,PROTAGONIST
	SET	'QUOTE-FLAG,FALSE-VALUE
	LOC	WINNER
	FSET?	STACK,VEHBIT /?CND27
	LOC	WINNER >HERE
?CND27:	CALL2	LIT?,HERE >LIT
	ZERO?	SUPER-BRIEF \?PRG31
	CRLF	
?PRG31:	ICALL1	UPDATE-STATUS-LINE
	ZERO?	P-PROMPT /?CND33
	ZERO?	P-OFLAG \?CND33
	EQUAL?	P-PROMPT,2 \?PRG42
	PRINT	OKAY
	PRINTI	"what do you want to do now?"
	JUMP	?CND37
?PRG42:	PRINTI	"What next?"
?CND37:	CRLF	
?CND33:	PUTB	P-LEXV,0,59
	PRINTC	62
	PUTB	P-INBUF,1,0
	READ	P-INBUF,P-LEXV
	GETB	P-LEXV,P-LEXWORDS >P-INPUT-WORDS
?CND14:	GETB	P-LEXV,P-LEXWORDS >P-LEN
	ZERO?	P-LEN \?CCL48
	PRINTI	"I beg your pardon?"
	CRLF	
	RFALSE	
?CCL48:	GET	P-LEXV,PTR
	EQUAL?	STACK,W?OOPS,W?O \?CCL52
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?PERIOD,W?COMMA \?CND53
	ADD	PTR,P-LEXELEN >PTR
	DEC	'P-LEN
?CND53:	GRTR?	P-LEN,1 /?CCL57
	ICALL2	CANT-USE,STR?1
	RFALSE	
?CCL57:	GET	OOPS-TABLE,O-PTR
	ZERO?	STACK /?CCL59
	GRTR?	P-LEN,2 \?CND60
	PRINTI	"[Warning: Only the first word after OOPS is used.]"
	CRLF	
?CND60:	GET	OOPS-TABLE,O-PTR >?TMP1
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	PUT	AGAIN-LEXV,?TMP1,STACK
	SET	'WINNER,OWINNER
	MUL	PTR,P-LEXELEN
	ADD	STACK,6
	GETB	P-LEXV,STACK >?TMP2
	MUL	PTR,P-LEXELEN
	ADD	STACK,7
	GETB	P-LEXV,STACK >?TMP1
	GET	OOPS-TABLE,O-PTR
	MUL	STACK,P-LEXELEN
	ADD	STACK,3
	ICALL	INBUF-ADD,?TMP2,?TMP1,STACK
	ICALL	STUFF,P-LEXV,AGAIN-LEXV
	GETB	P-LEXV,P-LEXWORDS >P-LEN
	GET	OOPS-TABLE,O-START >PTR
	ICALL	INBUF-STUFF,P-INBUF,OOPS-INBUF
	JUMP	?CND46
?CCL59:	PUT	OOPS-TABLE,O-END,FALSE-VALUE
	PRINTI	"[There was no word to replace!]"
	CRLF	
	RFALSE	
?CCL52:	ZERO?	P-CONT \?CND46
	PUT	OOPS-TABLE,O-END,FALSE-VALUE
?CND46:	SET	'P-CONT,FALSE-VALUE
	GET	P-LEXV,PTR
	EQUAL?	STACK,W?AGAIN,W?G \?CCL69
	ZERO?	P-OFLAG /?CCL72
	ICALL2	CANT-USE,STR?2
	RFALSE	
?CCL72:	ZERO?	P-WON \?CCL74
	PRINTI	"[That would just repeat a mistake!]"
	CRLF	
	RFALSE	
?CCL74:	EQUAL?	OWINNER,PROTAGONIST /?CCL78
	CALL2	VISIBLE?,OWINNER
	ZERO?	STACK \?CCL78
	PRINTI	"[You can't see "
	PRINTD	OWINNER
	PRINTI	" any more.]"
	CRLF	
	RFALSE	
?CCL78:	GRTR?	P-LEN,1 \?CCL84
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?PERIOD,W?COMMA,W?THEN /?CTR86
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?AND \?CCL87
?CTR86:	ADD	PTR,4 >PTR
	GETB	P-LEXV,P-LEXWORDS
	SUB	STACK,2
	PUTB	P-LEXV,P-LEXWORDS,STACK
	JUMP	?CND70
?CCL87:	SET	'P-WON,FALSE-VALUE
	PRINTI	"[That sentence isn't one I recognize.]"
	CRLF	
	RFALSE	
?CCL84:	ADD	PTR,P-LEXELEN >PTR
	GETB	P-LEXV,P-LEXWORDS
	SUB	STACK,1
	PUTB	P-LEXV,P-LEXWORDS,STACK
?CND70:	GETB	P-LEXV,P-LEXWORDS
	GRTR?	STACK,0 \?CCL94
	ICALL	STUFF,RESERVE-LEXV,P-LEXV
	ICALL	INBUF-STUFF,RESERVE-INBUF,P-INBUF
	SET	'RESERVE-PTR,PTR
	JUMP	?CND92
?CCL94:	SET	'RESERVE-PTR,FALSE-VALUE
?CND92:	SET	'WINNER,OWINNER
	SET	'P-MERGED,OMERGED
	ICALL	INBUF-STUFF,P-INBUF,OOPS-INBUF
	ICALL	STUFF,P-LEXV,AGAIN-LEXV
	SET	'CNT,-1
	SET	'DIR,AGAIN-DIR
?PRG95:	IGRTR?	'CNT,P-ITBLLEN /?CND67
	GET	P-OTBL,CNT
	PUT	P-ITBL,CNT,STACK
	JUMP	?PRG95
?CCL69:	ICALL	STUFF,AGAIN-LEXV,P-LEXV
	ICALL	INBUF-STUFF,OOPS-INBUF,P-INBUF
	PUT	OOPS-TABLE,O-START,PTR
	MUL	4,P-LEN
	PUT	OOPS-TABLE,O-LENGTH,STACK
	GETB	P-LEXV,P-LEXWORDS
	MUL	P-LEXELEN,STACK
	ADD	PTR,STACK
	MUL	2,STACK >LEN
	GET	OOPS-TABLE,O-END
	ZERO?	STACK \?CND100
	SUB	LEN,1
	GETB	P-LEXV,STACK >?TMP1
	SUB	LEN,2
	GETB	P-LEXV,STACK
	ADD	?TMP1,STACK
	PUT	OOPS-TABLE,O-END,STACK
?CND100:	SET	'RESERVE-PTR,FALSE-VALUE
	SET	'LEN,P-LEN
	SET	'P-NCN,0
	SET	'P-GETFLAGS,0
	SET	'BOTTOM,FALSE-VALUE
?PRG102:	DLESS?	'P-LEN,0 \?CCL106
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND67
?CCL106:	GET	P-LEXV,PTR >WRD
	CALL2	BUZZER-WORD?,WRD
	ZERO?	STACK \FALSE
	GET	P-LEXV,PTR >WRD
	ZERO?	WRD \?CTR109
	CALL2	NUMBER?,PTR >WRD
	ZERO?	WRD /?CCL110
?CTR109:	CALL2	NEXT-WORD,PTR >NW
	EQUAL?	WRD,W?TO \?CCL115
	EQUAL?	VERB,ACT?TELL \?CCL115
	SET	'WRD,W?QUOTE
	JUMP	?CND113
?CCL115:	EQUAL?	WRD,W?THEN \?CND113
	GRTR?	P-LEN,0 \?CND113
	ZERO?	VERB \?CND113
	ZERO?	QUOTE-FLAG \?CND113
	PUT	P-ITBL,P-VERB,ACT?TELL
	PUT	P-ITBL,P-VERBN,0
	SET	'WRD,W?QUOTE
?CND113:	EQUAL?	WRD,W?THEN,W?PERIOD /?CTR124
	EQUAL?	WRD,W?QUOTE \?CCL125
?CTR124:	EQUAL?	WRD,W?QUOTE \?CND128
	ZERO?	QUOTE-FLAG /?CCL132
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND128
?CCL132:	SET	'QUOTE-FLAG,TRUE-VALUE
?CND128:	ZERO?	P-LEN /?PEN133
	ADD	PTR,P-LEXELEN >P-CONT
?PEN133:	PUTB	P-LEXV,P-LEXWORDS,P-LEN
	JUMP	?CND67
?CCL125:	CALL	WT?,WRD,16,3 >VAL
	ZERO?	VAL /?CCL136
	EQUAL?	VERB,FALSE-VALUE,ACT?WALK \?CCL136
	EQUAL?	LEN,1 /?CTR135
	EQUAL?	LEN,2 \?PRD142
	EQUAL?	VERB,ACT?WALK /?CTR135
?PRD142:	EQUAL?	NW,W?THEN,W?PERIOD,W?QUOTE \?PRD145
	LESS?	LEN,2 \?CTR135
?PRD145:	ZERO?	QUOTE-FLAG /?PRD148
	EQUAL?	LEN,2 \?PRD148
	EQUAL?	NW,W?QUOTE /?CTR135
?PRD148:	GRTR?	LEN,2 \?CCL136
	EQUAL?	NW,W?COMMA,W?AND \?CCL136
?CTR135:	SET	'DIR,VAL
	EQUAL?	NW,W?COMMA,W?AND \?CND154
	ADD	PTR,P-LEXELEN
	ICALL	CHANGE-LEXV,STACK,W?THEN
?CND154:	GRTR?	LEN,2 /?CND104
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND67
?CCL136:	CALL	WT?,WRD,64,1 >VAL
	ZERO?	VAL /?CCL159
	ZERO?	VERB \?CCL159
	SET	'P-PRSA-WORD,WRD
	SET	'VERB,VAL
	PUT	P-ITBL,P-VERB,VAL
	PUT	P-ITBL,P-VERBN,P-VTBL
	PUT	P-VTBL,0,WRD
	MUL	PTR,2
	ADD	STACK,2 >CNT
	GETB	P-LEXV,CNT
	PUTB	P-VTBL,2,STACK
	ADD	CNT,1
	GETB	P-LEXV,STACK
	PUTB	P-VTBL,3,STACK
	JUMP	?CND104
?CCL159:	CALL	WT?,WRD,8,0 >VAL
	ZERO?	VAL \?CTR162
	EQUAL?	WRD,W?ALL,W?ONE,W?BOTH /?CTR162
	CALL	WT?,WRD,32
	ZERO?	STACK \?CTR162
	CALL	WT?,WRD,128
	ZERO?	STACK /?CCL163
?CTR162:	GRTR?	P-LEN,0 \?CCL170
	EQUAL?	NW,W?OF \?CCL170
	ZERO?	VAL \?CCL170
	EQUAL?	WRD,W?ALL,W?ONE,W?A /?CCL170
	EQUAL?	WRD,W?AN,W?BOTH /?CCL170
	EQUAL?	WRD,W?BOTTOM \?CND104
	SET	'BOTTOM,TRUE-VALUE
	JUMP	?CND104
?CCL170:	ZERO?	VAL /?CCL179
	ZERO?	P-LEN /?CTR178
	EQUAL?	NW,W?THEN,W?PERIOD \?CCL179
?CTR178:	SET	'P-END-ON-PREP,TRUE-VALUE
	LESS?	P-NCN,2 \?CND104
	PUT	P-ITBL,P-PREP1,VAL
	PUT	P-ITBL,P-PREP1N,WRD
	JUMP	?CND104
?CCL179:	EQUAL?	P-NCN,2 \?CCL187
	PRINTI	"[There were too many nouns in that sentence.]"
	CRLF	
	RFALSE	
?CCL187:	INC	'P-NCN
	CALL	CLAUSE,PTR,VAL,WRD >PTR
	ZERO?	PTR /FALSE
	LESS?	PTR,0 \?CND104
	SET	'QUOTE-FLAG,FALSE-VALUE
?CND67:	PUT	OOPS-TABLE,O-PTR,FALSE-VALUE
	ZERO?	DIR /?CND202
	SET	'PRSA,V?WALK
	SET	'PRSO,DIR
	SET	'P-OFLAG,FALSE-VALUE
	SET	'P-WALK-DIR,DIR
	SET	'AGAIN-DIR,DIR
	RTRUE	
?CCL163:	CALL	WT?,WRD,4
	ZERO?	STACK \?CND104
	EQUAL?	VERB,ACT?TELL \?CCL196
	CALL	WT?,WRD,64,1
	ZERO?	STACK /?CCL196
	EQUAL?	WINNER,PROTAGONIST \?CCL196
	PRINTI	"Consult your manual for how to talk to characters."
	CRLF	
	RFALSE	
?CCL196:	ICALL2	CANT-USE,PTR
	RFALSE	
?CCL110:	ICALL2	UNKNOWN-WORD,PTR
	RFALSE	
?CND104:	SET	'LW,WRD
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG102
?CND202:	SET	'P-WALK-DIR,FALSE-VALUE
	SET	'AGAIN-DIR,FALSE-VALUE
	ZERO?	P-OFLAG /?CCL206
	ICALL1	ORPHAN-MERGE
	JUMP	?CND204
?CCL206:	SET	'BOTTOM?,BOTTOM
?CND204:	CALL1	SYNTAX-CHECK
	ZERO?	STACK /FALSE
	CALL1	SNARF-OBJECTS
	ZERO?	STACK /FALSE
	CALL1	MANY-CHECK
	ZERO?	STACK /FALSE
	CALL1	TAKE-CHECK
	ZERO?	STACK \TRUE
	RFALSE	


	.FUNCT	ADJ-CHECK,WRD,ADJ
	ZERO?	ADJ \FALSE
	RTRUE	


	.FUNCT	INBUF-STUFF,DEST,SRC,CNT
	SET	'CNT,-1
?PRG1:	IGRTR?	'CNT,P-INBUF-LENGTH /TRUE
	GETB	SRC,CNT
	PUTB	DEST,CNT,STACK
	JUMP	?PRG1


	.FUNCT	STUFF,DEST,SRC,MAX,PTR,CTR,BPTR
	ASSIGNED?	'MAX /?CND1
	SET	'MAX,29
?CND1:	SET	'PTR,P-LEXSTART
	SET	'CTR,1
	GETB	SRC,0
	PUTB	DEST,0,STACK
	GETB	SRC,1
	PUTB	DEST,1,STACK
?PRG3:	GET	SRC,PTR
	PUT	DEST,PTR,STACK
	MUL	PTR,2
	ADD	STACK,2 >BPTR
	GETB	SRC,BPTR
	PUTB	DEST,BPTR,STACK
	MUL	PTR,2
	ADD	STACK,3 >BPTR
	GETB	SRC,BPTR
	PUTB	DEST,BPTR,STACK
	ADD	PTR,P-LEXELEN >PTR
	IGRTR?	'CTR,MAX \?PRG3
	RTRUE	


	.FUNCT	NEXT-WORD,PTR,NW
	ZERO?	P-LEN /FALSE
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK >NW
	ZERO?	NW /?CCL6
	RETURN	NW
?CCL6:	ADD	PTR,P-LEXELEN
	CALL2	NUMBER?,STACK
	RSTACK	


	.FUNCT	WAY-TO-TALK
	ICALL1	REFER-TO-MANUAL
	PRINTR	" for the correct way to talk to characters.]"


	.FUNCT	INBUF-ADD,LEN,BEG,SLOT,DBEG,CTR,TMP,?TMP1
	GET	OOPS-TABLE,O-END >TMP
	ZERO?	TMP /?CCL3
	SET	'DBEG,TMP
	JUMP	?CND1
?CCL3:	GET	OOPS-TABLE,O-LENGTH >TMP
	GETB	AGAIN-LEXV,TMP >?TMP1
	ADD	TMP,1
	GETB	AGAIN-LEXV,STACK
	ADD	?TMP1,STACK >DBEG
?CND1:	ADD	DBEG,LEN
	PUT	OOPS-TABLE,O-END,STACK
?PRG4:	ADD	DBEG,CTR >?TMP1
	ADD	BEG,CTR
	GETB	P-INBUF,STACK
	PUTB	OOPS-INBUF,?TMP1,STACK
	INC	'CTR
	EQUAL?	CTR,LEN \?PRG4
	PUTB	AGAIN-LEXV,SLOT,DBEG
	SUB	SLOT,1
	PUTB	AGAIN-LEXV,STACK,LEN
	RTRUE	


	.FUNCT	CHANGE-LEXV,PTR,WRD,PTRS?,X,Y,Z
	ZERO?	PTRS? /?CND1
	SUB	PTR,P-LEXELEN
	MUL	2,STACK
	ADD	2,STACK >X
	GETB	P-LEXV,X >Y
	MUL	2,PTR
	ADD	2,STACK >Z
	PUTB	P-LEXV,Z,Y
	PUTB	AGAIN-LEXV,Z,Y
	ADD	1,X
	GETB	P-LEXV,STACK >Y
	MUL	2,PTR
	ADD	3,STACK >Z
	PUTB	P-LEXV,Z,Y
	PUTB	AGAIN-LEXV,Z,Y
?CND1:	PUT	P-LEXV,PTR,WRD
	PUT	AGAIN-LEXV,PTR,WRD
	RTRUE	


	.FUNCT	WT?,PTR,BIT,B1,OFFS,TYP
	ASSIGNED?	'B1 /?CND1
	SET	'B1,5
?CND1:	SET	'OFFS,P-P1OFF
	GETB	PTR,P-PSOFF >TYP
	BTST	TYP,BIT \FALSE
	GRTR?	B1,4 /TRUE
	BAND	TYP,P-P1BITS >TYP
	EQUAL?	TYP,B1 /?CND9
	INC	'OFFS
?CND9:	GETB	PTR,OFFS
	RSTACK	


	.FUNCT	CLAUSE,PTR,VAL,WRD,OFF,NUM,ANDFLG,FIRST??,NW,LW,?TMP1
	SET	'FIRST??,TRUE-VALUE
	SUB	P-NCN,1
	MUL	STACK,2 >OFF
	ZERO?	VAL /?CCL3
	ADD	P-PREP1,OFF >NUM
	PUT	P-ITBL,NUM,VAL
	ADD	NUM,1
	PUT	P-ITBL,STACK,WRD
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND1
?CCL3:	INC	'P-LEN
?CND1:	ZERO?	P-LEN \?CND4
	DEC	'P-NCN
	RETURN	-1
?CND4:	ADD	P-NC1,OFF >NUM
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,NUM,STACK
	GET	P-LEXV,PTR
	EQUAL?	STACK,W?THE,W?A,W?AN \?PRG8
	GET	P-ITBL,NUM
	ADD	STACK,4
	PUT	P-ITBL,NUM,STACK
?PRG8:	DLESS?	'P-LEN,0 \?CND10
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	-1
?CND10:	GET	P-LEXV,PTR >WRD
	CALL2	BUZZER-WORD?,WRD
	ZERO?	STACK \FALSE
	ZERO?	WRD \?CTR15
	CALL2	NUMBER?,PTR >WRD
	ZERO?	WRD /?CCL16
?CTR15:	ZERO?	P-LEN \?CCL21
	SET	'NW,0
	JUMP	?CND19
?CCL21:	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK >NW
?CND19:	EQUAL?	WRD,W?PERIOD \?CCL24
	EQUAL?	LW,W?MR,W?MS,W?SGT \?CCL24
	SET	'LW,0
	JUMP	?CND12
?CCL24:	EQUAL?	WRD,W?AND,W?COMMA \?CCL28
	SET	'ANDFLG,TRUE-VALUE
	JUMP	?CND12
?CCL28:	EQUAL?	WRD,W?ALL,W?BOTH,W?EVERYTHING \?CCL30
	EQUAL?	NW,W?OF \?CND12
	DEC	'P-LEN
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND12
?CCL30:	EQUAL?	WRD,W?THEN,W?PERIOD /?CTR33
	CALL	WT?,WRD,8
	ZERO?	STACK /?CCL34
	GET	P-ITBL,P-VERB
	ZERO?	STACK /?CCL34
	ZERO?	FIRST?? \?CCL34
?CTR33:	INC	'P-LEN
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	SUB	PTR,P-LEXELEN
	RSTACK	
?CCL34:	ZERO?	ANDFLG /?CCL41
	GET	P-ITBL,P-VERBN
	ZERO?	STACK /?CTR40
	CALL2	VERB-DIR-ONLY?,WRD
	ZERO?	STACK /?CCL41
?CTR40:	SUB	PTR,4 >PTR
	ADD	PTR,2
	PUT	P-LEXV,STACK,W?THEN
	ADD	P-LEN,2 >P-LEN
	JUMP	?CND12
?CCL41:	CALL	WT?,WRD,128
	ZERO?	STACK /?CCL47
	GRTR?	P-LEN,0 \?CCL50
	EQUAL?	NW,W?OF \?CCL50
	EQUAL?	WRD,W?ALL,W?EVERYTHING \?CND12
?CCL50:	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL54
	ZERO?	NW /?CCL54
	CALL	WT?,NW,128
	ZERO?	STACK \?CND12
?CCL54:	ZERO?	ANDFLG \?CCL59
	EQUAL?	NW,W?BUT,W?EXCEPT /?CCL59
	EQUAL?	NW,W?AND,W?COMMA /?CCL59
	ADD	NUM,1 >?TMP1
	ADD	PTR,2
	MUL	STACK,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	PTR
?CCL59:	SET	'ANDFLG,FALSE-VALUE
	JUMP	?CND12
?CCL47:	CALL	WT?,WRD,32
	ZERO?	STACK \?CND12
	CALL	WT?,WRD,4
	ZERO?	STACK \?CND12
	ZERO?	ANDFLG /?CCL67
	GET	P-ITBL,P-VERB
	ZERO?	STACK \?CCL67
	SUB	PTR,4 >PTR
	ADD	PTR,2
	PUT	P-LEXV,STACK,W?THEN
	ADD	P-LEN,2 >P-LEN
?CND12:	SET	'LW,WRD
	SET	'FIRST??,FALSE-VALUE
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG8
?CCL67:	CALL	WT?,WRD,8
	ZERO?	STACK \?CND12
	ICALL2	CANT-USE,PTR
	RFALSE	
?CCL16:	ICALL2	UNKNOWN-WORD,PTR
	RFALSE	


	.FUNCT	THIS-IS-IT,OBJ
	EQUAL?	OBJ,FALSE-VALUE,PROTAGONIST,NOT-HERE-OBJECT /TRUE
	EQUAL?	OBJ,INTDIR /TRUE
	EQUAL?	PRSA,V?WALK,V?WALK-TO \?CCL7
	EQUAL?	OBJ,PRSO /TRUE
?CCL7:	EQUAL?	OBJ,CHAINS,GLASSES,BOOTS /?CTR10
	EQUAL?	OBJ,CROWD,MONUMENTS,HUMANOIDS /?CTR10
	EQUAL?	OBJ,VAPORS,INSTRUMENTS,SHARKS \?CCL11
?CTR10:	SET	'P-IT-OBJECT,OBJ
	SET	'P-THEM-OBJECT,OBJ
	RTRUE	
?CCL11:	EQUAL?	OBJ,MISS-VOSS,OLD-WOMAN,EVIL-ONE \?CCL16
	SET	'P-HER-OBJECT,OBJ
	RTRUE	
?CCL16:	EQUAL?	OBJ,KITTY,CHAOS,PRINCESS \?CCL18
	SET	'P-IT-OBJECT,OBJ
	SET	'P-HER-OBJECT,OBJ
	RTRUE	
?CCL18:	EQUAL?	OBJ,CRISP,GRAVEDIGGER,MACGUFFIN \?CCL20
	SET	'P-HIM-OBJECT,OBJ
	RTRUE	
?CCL20:	EQUAL?	OBJ,TROLL,KING,VULTURE /?CTR21
	EQUAL?	OBJ,GOLDFISH,PIRANHA,HORSE \?CCL22
?CTR21:	SET	'P-IT-OBJECT,OBJ
	SET	'P-HIM-OBJECT,OBJ
	RTRUE	
?CCL22:	SET	'P-IT-OBJECT,OBJ
	RTRUE	


	.FUNCT	FAKE-ORPHAN,TMP,?TMP1
	ICALL	ORPHAN,P-SYNTAX,FALSE-VALUE
	ICALL1	BE-SPECIFIC
	GET	P-OTBL,P-VERBN >TMP
	ZERO?	TMP \?CCL3
	PRINTI	"tell"
	JUMP	?CND1
?CCL3:	GETB	P-VTBL,2
	ZERO?	STACK \?CCL7
	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND1
?CCL7:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
	PUTB	P-VTBL,2,0
?CND1:	SET	'P-OFLAG,TRUE-VALUE
	SET	'P-WON,FALSE-VALUE
	PRINTR	"?]"


	.FUNCT	SEE-VERB?
	EQUAL?	PRSA,V?LOOK,V?EXAMINE,V?LOOK-INSIDE /TRUE
	EQUAL?	PRSA,V?SEARCH,V?FIND,V?LOOK-ON /TRUE
	EQUAL?	PRSA,V?LOOK-UNDER,V?LOOK-BEHIND,V?READ /TRUE
	EQUAL?	PRSA,V?LOOK-THRU,V?LOOK-DOWN,V?COUNT /TRUE
	RFALSE	


	.FUNCT	PERFORM,A,O,I,V,OA,OO,OI
	SET	'OA,PRSA
	SET	'OO,PRSO
	SET	'OI,PRSI
	SET	'PRSA,A
	ZERO?	LIT \?CCL3
	CALL1	SEE-VERB?
	ZERO?	STACK /?CCL3
	ICALL1	TOO-DARK
	RETURN	2
?CCL3:	ZERO?	IMMOBILIZED? /?CCL9
	CALL1	SEE-VERB?
	ZERO?	STACK \?CCL9
	CALL1	GAME-VERB?
	ZERO?	STACK \?CCL9
	PRINTI	"Your body seems unwilling to respond."
	CRLF	
	RETURN	2
?CCL9:	ZERO?	P-WALK-DIR \?CND1
	EQUAL?	A,V?WALK /?CND1
	EQUAL?	IT,I,O \?CND20
	CALL2	ACCESSIBLE?,P-IT-OBJECT
	ZERO?	STACK \?CND20
	ZERO?	I \?CCL26
	ICALL1	FAKE-ORPHAN
	RETURN	2
?CCL26:	ICALL2	CANT-SEE-ANY,P-IT-OBJECT
	RETURN	2
?CND20:	EQUAL?	THEM,I,O \?CND29
	CALL2	VISIBLE?,P-THEM-OBJECT
	ZERO?	STACK /?CCL33
	EQUAL?	THEM,O \?CND34
	SET	'O,P-THEM-OBJECT
?CND34:	EQUAL?	THEM,I \?CND29
	SET	'I,P-THEM-OBJECT
?CND29:	EQUAL?	HER,I,O \?CND43
	CALL2	VISIBLE?,P-HER-OBJECT
	ZERO?	STACK /?CCL47
	EQUAL?	HER,O \?CND48
	SET	'O,P-HER-OBJECT
?CND48:	EQUAL?	HER,I \?CND43
	SET	'I,P-HER-OBJECT
?CND43:	EQUAL?	HIM,I,O \?CND57
	CALL2	VISIBLE?,P-HIM-OBJECT
	ZERO?	STACK /?CCL61
	EQUAL?	HIM,O \?CND62
	SET	'O,P-HIM-OBJECT
?CND62:	EQUAL?	HIM,I \?CND57
	SET	'I,P-HIM-OBJECT
?CND57:	EQUAL?	O,IT \?CND71
	SET	'O,P-IT-OBJECT
?CND71:	EQUAL?	I,IT \?CND1
	SET	'I,P-IT-OBJECT
?CND1:	SET	'PRSI,I
	SET	'PRSO,O
	SET	'V,FALSE-VALUE
	EQUAL?	A,V?WALK /?CND75
	ZERO?	P-WALK-DIR \?CND75
	EQUAL?	NOT-HERE-OBJECT,PRSO,PRSI \?CND75
	CALL	NOT-HERE-OBJECT-F >V
	ZERO?	V /?CND75
	SET	'P-WON,FALSE-VALUE
?CND75:	ICALL2	THIS-IS-IT,PRSI
	ICALL2	THIS-IS-IT,PRSO
	SET	'O,PRSO
	SET	'I,PRSI
	ZERO?	V \?CND82
	GETP	WINNER,P?ACTION
	CALL	STACK,M-WINNER >V
?CND82:	ZERO?	V \?CND84
	LOC	WINNER
	GETP	STACK,P?ACTION
	CALL	STACK,M-BEG >V
?CND84:	ZERO?	V \?CND86
	GET	PREACTIONS,A
	CALL	STACK >V
?CND86:	ZERO?	V \?CND88
	EQUAL?	WINNER,PROTAGONIST /?CND88
	GET	ACTIONS,A
	ICALL	STACK
	SET	'V,TRUE-VALUE
?CND88:	ZERO?	V \?CND92
	ZERO?	I /?CND92
	EQUAL?	A,V?WALK /?CND92
	LOC	I
	ZERO?	STACK /?CND92
	LOC	I
	GETP	STACK,P?CONTFCN >V
	ZERO?	V /?CND92
	CALL	V,M-CONT >V
?CND92:	ZERO?	V \?CND100
	ZERO?	I /?CND100
	GETP	I,P?ACTION
	CALL	STACK >V
?CND100:	ZERO?	V \?CND104
	ZERO?	O /?CND104
	EQUAL?	A,V?WALK /?CND104
	LOC	O
	ZERO?	STACK /?CND104
	LOC	O
	GETP	STACK,P?CONTFCN >V
	ZERO?	V /?CND104
	CALL	V,M-CONT >V
?CND104:	ZERO?	V \?CND112
	ZERO?	O /?CND112
	EQUAL?	A,V?WALK /?CND112
	GETP	O,P?ACTION
	CALL	STACK >V
	ZERO?	V /?CND112
	ICALL2	THIS-IS-IT,O
?CND112:	ZERO?	V \?CND119
	GET	ACTIONS,A
	CALL	STACK >V
?CND119:	SET	'PRSA,OA
	SET	'PRSO,OO
	SET	'PRSI,OI
	RETURN	V
?CCL33:	ZERO?	I \?CCL40
	ICALL1	FAKE-ORPHAN
	RETURN	2
?CCL40:	ICALL2	CANT-SEE-ANY,P-THEM-OBJECT
	RETURN	2
?CCL47:	ZERO?	I \?CCL54
	ICALL1	FAKE-ORPHAN
	RETURN	2
?CCL54:	ICALL2	CANT-SEE-ANY,P-HER-OBJECT
	RETURN	2
?CCL61:	ZERO?	I \?CCL68
	ICALL1	FAKE-ORPHAN
	RETURN	2
?CCL68:	ICALL2	CANT-SEE-ANY,P-HIM-OBJECT
	RETURN	2


	.FUNCT	BUZZER-WORD?,WORD
	CALL2	QUESTION-WORD?,WORD
	ZERO?	STACK \TRUE
	CALL2	NAUGHTY-WORD?,WORD
	ZERO?	STACK \TRUE
	CALL2	MAGIC-WORD?,WORD
	ZERO?	STACK \TRUE
	EQUAL?	WORD,W?NW,W?NORTHWEST,W?NE /?CTR8
	EQUAL?	WORD,W?SW,W?SOUTHWEST,W?NORTHEAST /?CTR8
	EQUAL?	WORD,W?SE,W?SOUTHEAST \?CCL9
?CTR8:	ICALL1	V-BAD-DIRECTION
	RTRUE	
?CCL9:	EQUAL?	WORD,W?MOUSE,W?RAT,W?RODENT \?CCL14
	EQUAL?	HERE,INSIDE-CHURCH \?CCL17
	FSET?	CHURCH,TOUCHBIT /?CCL17
	PRINTR	"It disappeared before you could get a good look."
?CCL17:	ICALL1	CANT-SEE-ANY
	RTRUE	
?CCL14:	CALL2	SESAME?,WORD
	ZERO?	STACK \TRUE
	ZERO?	FUZZY? \?CCL25
	EQUAL?	WORD,W?FUZZY,W?BLURRY,W?BLURRED \?CCL25
	PRINT	YOU-SEE
	PRINTI	"nothing "
	PRINTB	WORD
	PRINTR	" here!"
?CCL25:	EQUAL?	WORD,W?CORKY \FALSE
	PRINTD	CRISP
	IN?	CRISP,HERE \?PRG41
	PRINTR	" reddens. ""Don't use that name in front of me!"""
?PRG41:	PRINTR	" hates it when you use that name!"


	.FUNCT	SESAME?,WORD,MWORD
	EQUAL?	WORD,W?KALUZE,W?FRATTO,W?SORKIN \FALSE
	ZERO?	POWER \?CCL6
	SET	'MWORD,W?KALUZE
	JUMP	?CND4
?CCL6:	EQUAL?	POWER,1 \?CCL8
	SET	'MWORD,W?FRATTO
	JUMP	?CND4
?CCL8:	SET	'MWORD,W?SORKIN
?CND4:	SET	'P-CONT,FALSE-VALUE
	SET	'QUOTE-FLAG,FALSE-VALUE
	SET	'CLOCK-WAIT,TRUE-VALUE
	ZERO?	SKEWED? /?PRG15
	EQUAL?	HERE,HILLTOP \?PRG15
	EQUAL?	WORD,MWORD /?CCL11
?PRG15:	PRINTI	"The word """
	PRINTB	WORD
	PRINTR	""" isn't useful here."
?CCL11:	FSET?	PELICAN,RMUNGBIT \?CCL20
	ICALL2	SAY-THE,DRAWBRIDGE
	PRINTI	" decides that you're only guessing the word """
	PRINTB	WORD
	PRINTR	","" and refuses to cooperate."
?CCL20:	FSET?	DRAWBRIDGE,RMUNGBIT \?CCL26
	ICALL1	NOTHING-EXCITING
	RTRUE	
?CCL26:	ZERO?	ECLIPSE? /?CND9
	ICALL1	DARK-IS-POWERFUL
	RTRUE	
?CND9:	FSET	DRAWBRIDGE,RMUNGBIT
	FSET	DRAWBRIDGE,OPENBIT
	PRINTI	"With a great creak of wood and rattle of chains, the "
	PRINTD	DRAWBRIDGE
	PRINTI	" slowly lowers across the moat."
	CRLF	
	CRLF	
	ICALL2	UPDATE-SCORE,3
	ICALL1	GOOD-PLACE-TO-SAVE
	RTRUE	


	.FUNCT	QUESTION-WORD?,WORD
	EQUAL?	WORD,W?WHERE \?CCL3
	ICALL	TO-DO-THING-USE,STR?3,STR?4
	RTRUE	
?CCL3:	EQUAL?	WORD,W?WHAT,W?WHAT'S,W?WHO /?CTR4
	EQUAL?	WORD,W?WHO'S,W?WHY,W?HOW /?CTR4
	EQUAL?	WORD,W?WHEN,W?WHEN'S,W?AM /?CTR4
	EQUAL?	WORD,W?WOULD,W?COULD,W?SHOULD \?CCL5
?CTR4:	ICALL	TO-DO-THING-USE,STR?5,STR?6
	RTRUE	
?CCL5:	EQUAL?	WORD,W?THAT'S,W?IT'S,W?I'M /?PRG20
	EQUAL?	WORD,W?IS,W?DID,W?ARE /?PRG20
	EQUAL?	WORD,W?DO,W?HAVE,W?ANY /?PRG20
	EQUAL?	WORD,W?WILL,W?WAS,W?WERE /?PRG20
	EQUAL?	WORD,W?I'LL,W?WHICH,W?WE'RE /?PRG20
	EQUAL?	WORD,W?I'VE,W?WON'T,W?HAS /?PRG20
	EQUAL?	WORD,W?YOU'RE,W?HE'S,W?SHE'S /?PRG20
	EQUAL?	WORD,W?THEY'RE,W?SHALL \FALSE
?PRG20:	PRINTR	"[Please use commands, not statements or questions.]"


	.FUNCT	NAUGHTY-WORD?,WORD
	EQUAL?	WORD,W?CURSE,W?GODDAMNED,W?CUSS /?PRG11
	EQUAL?	WORD,W?DAMN,W?SHIT,W?FUCK /?PRG11
	EQUAL?	WORD,W?SHITHEAD,W?PISS,W?SUCK /?PRG11
	EQUAL?	WORD,W?BASTARD,W?SCREW,W?FUCKING /?PRG11
	EQUAL?	WORD,W?DAMNED,W?PEE,W?COCKSUCKER /?PRG11
	EQUAL?	WORD,W?FUCKED,W?CUNT,W?ASSHOLE /?PRG11
	EQUAL?	WORD,W?BITCH \FALSE
?PRG11:	PRINTC	91
	CALL2	PICK-ONE,OFFENDED
	PRINT	STACK
	PRINTR	".]"


	.FUNCT	MAGIC-WORD?,WORD
	EQUAL?	WORD,W?PLUGH,W?XYZZY,W?YOHO /?PRG7
	EQUAL?	WORD,W?ECHO,W?ODYSSEUS,W?ULYSSES /?PRG7
	EQUAL?	WORD,W?SAILOR,W?ZORK,W?OZMOO \FALSE
?PRG7:	PRINTR	"A hollow voice says, ""Fool!"""


	.FUNCT	VERB-DIR-ONLY?,WRD,?TMP1
	CALL	WT?,WRD,128
	ZERO?	STACK \FALSE
	CALL	WT?,WRD,32
	ZERO?	STACK \FALSE
	CALL	WT?,WRD,16 >?TMP1
	ZERO?	?TMP1 /?PRD7
	RETURN	?TMP1
?PRD7:	CALL	WT?,WRD,64
	RSTACK	


	.FUNCT	NUMBER?,PTR,CNT,BPTR,CHR,SUM,TIM,DOLLAR,?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,2 >CNT
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,3 >BPTR
?PRG1:	DLESS?	'CNT,0 /?REP2
	GETB	P-INBUF,BPTR >CHR
	EQUAL?	CHR,58 \?CCL8
	SET	'TIM,SUM
	SET	'SUM,0
	JUMP	?CND6
?CCL8:	GRTR?	SUM,9999 /FALSE
	GRTR?	CHR,57 /FALSE
	LESS?	CHR,48 /FALSE
	MUL	SUM,10 >?TMP1
	SUB	CHR,48
	ADD	?TMP1,STACK >SUM
?CND6:	INC	'BPTR
	JUMP	?PRG1
?REP2:	PUT	P-LEXV,PTR,W?INTNUM
	GRTR?	SUM,9999 /FALSE
	ZERO?	TIM /FALSE
	GRTR?	TIM,23 /FALSE
	MUL	TIM,60
	ADD	SUM,STACK >SUM
	RETURN	SUM


	.FUNCT	ORPHAN-MERGE,CNT,TEMP,VERB,BEG,END,ADJ,WRD,?TMP1
	SET	'CNT,-1
	SET	'P-OFLAG,FALSE-VALUE
	GET	P-ITBL,P-VERBN
	GET	STACK,0 >WRD
	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL3
	SET	'ADJ,TRUE-VALUE
	JUMP	?CND1
?CCL3:	CALL	WT?,WRD,128
	ZERO?	STACK /?CND1
	ZERO?	P-NCN \?CND1
	PUT	P-ITBL,P-VERB,0
	PUT	P-ITBL,P-VERBN,0
	ADD	P-LEXV,2
	PUT	P-ITBL,P-NC1,STACK
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
	SET	'P-NCN,1
?CND1:	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB /?CCL9
	ZERO?	ADJ \?CCL9
	GET	P-OTBL,P-VERB
	EQUAL?	VERB,STACK \FALSE
?CCL9:	EQUAL?	P-NCN,2 /FALSE
	GET	P-OTBL,P-NC1
	EQUAL?	STACK,1 \?CCL16
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP1
	EQUAL?	TEMP,STACK /?CTR18
	ZERO?	TEMP \FALSE
?CTR18:	ZERO?	ADJ /?CCL24
	ADD	P-LEXV,2
	PUT	P-OTBL,P-NC1,STACK
	GET	P-ITBL,P-NC1L
	ZERO?	STACK \?CND25
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
?CND25:	ZERO?	P-NCN \?CND22
	SET	'P-NCN,1
	JUMP	?CND22
?CCL24:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC1,STACK
?CND22:	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC1L,STACK
	JUMP	?CND7
?CCL16:	GET	P-OTBL,P-NC2
	EQUAL?	STACK,1 \?CCL30
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP2
	EQUAL?	TEMP,STACK /?CTR32
	ZERO?	TEMP \FALSE
?CTR32:	ZERO?	ADJ /?CND36
	ADD	P-LEXV,2
	PUT	P-ITBL,P-NC1,STACK
	GET	P-ITBL,P-NC1L
	ZERO?	STACK \?CND36
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
?CND36:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC2,STACK
	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC2L,STACK
	SET	'P-NCN,2
	JUMP	?CND7
?CCL30:	ZERO?	P-ACLAUSE /?CND7
	EQUAL?	P-NCN,1 /?CCL43
	ZERO?	ADJ \?CCL43
	SET	'P-ACLAUSE,FALSE-VALUE
	RFALSE	
?CCL43:	GET	P-ITBL,P-NC1 >BEG
	ZERO?	ADJ /?CND46
	ADD	P-LEXV,2 >BEG
	SET	'ADJ,FALSE-VALUE
?CND46:	GET	P-ITBL,P-NC1L >END
?PRG48:	GET	BEG,0 >WRD
	EQUAL?	BEG,END \?CCL52
	ZERO?	ADJ /?CCL55
	ICALL2	ACLAUSE-WIN,ADJ
	JUMP	?CND7
?CCL55:	SET	'P-ACLAUSE,FALSE-VALUE
	RFALSE	
?CCL52:	ZERO?	ADJ \?CCL57
	GETB	WRD,P-PSOFF
	BTST	STACK,32 /?CTR56
	EQUAL?	WRD,W?ALL,W?EVERYTHING \?CCL57
?CTR56:	SET	'ADJ,WRD
?CND50:	ADD	BEG,P-WORDLEN >BEG
	ZERO?	END \?PRG48
	SET	'END,BEG
	SET	'P-NCN,1
	SUB	BEG,4
	PUT	P-ITBL,P-NC1,STACK
	PUT	P-ITBL,P-NC1L,BEG
	JUMP	?PRG48
?CCL57:	GETB	WRD,P-PSOFF
	BTST	STACK,128 \?CND50
	EQUAL?	WRD,P-ANAM \?CCL65
	ICALL2	ACLAUSE-WIN,ADJ
	JUMP	?CND7
?CCL65:	ICALL1	NCLAUSE-WIN
?CND7:	GET	P-OVTBL,0
	PUT	P-VTBL,0,STACK
	GETB	P-OVTBL,2
	PUTB	P-VTBL,2,STACK
	GETB	P-OVTBL,3
	PUTB	P-VTBL,3,STACK
	PUT	P-OTBL,P-VERBN,P-VTBL
	PUTB	P-VTBL,2,0
?PRG68:	IGRTR?	'CNT,P-ITBLLEN \?CCL72
	SET	'P-MERGED,TRUE-VALUE
	RTRUE	
?CCL72:	GET	P-OTBL,CNT
	PUT	P-ITBL,CNT,STACK
	JUMP	?PRG68


	.FUNCT	ACLAUSE-WIN,ADJ
	GET	P-OTBL,P-VERB
	PUT	P-ITBL,P-VERB,STACK
	PUT	P-CCTBL,CC-SBPTR,P-ACLAUSE
	ADD	P-ACLAUSE,1
	PUT	P-CCTBL,CC-SEPTR,STACK
	PUT	P-CCTBL,CC-DBPTR,P-ACLAUSE
	ADD	P-ACLAUSE,1
	PUT	P-CCTBL,CC-DEPTR,STACK
	ICALL	CLAUSE-COPY,P-OTBL,P-OTBL,ADJ
	GET	P-OTBL,P-NC2
	ZERO?	STACK /?PEN1
	SET	'P-NCN,2
?PEN1:	SET	'P-ACLAUSE,FALSE-VALUE
	RTRUE	


	.FUNCT	NCLAUSE-WIN
	PUT	P-CCTBL,CC-SBPTR,P-NC1
	PUT	P-CCTBL,CC-SEPTR,P-NC1L
	PUT	P-CCTBL,CC-DBPTR,P-ACLAUSE
	ADD	P-ACLAUSE,1
	PUT	P-CCTBL,CC-DEPTR,STACK
	ICALL	CLAUSE-COPY,P-ITBL,P-OTBL
	GET	P-OTBL,P-NC2
	ZERO?	STACK /?PEN1
	SET	'P-NCN,2
?PEN1:	SET	'P-ACLAUSE,FALSE-VALUE
	RTRUE	


	.FUNCT	WORD-PRINT,CNT,BUF
?PRG1:	DLESS?	'CNT,0 /TRUE
	GETB	P-INBUF,BUF
	PRINTC	STACK
	INC	'BUF
	JUMP	?PRG1


	.FUNCT	UNKNOWN-WORD,PTR,BUF,MSG,?TMP1
	PUT	OOPS-TABLE,O-PTR,PTR
	CALL2	PICK-ONE,UNKNOWN-MSGS >MSG
	PRINTC	91
	GET	MSG,0
	PRINT	STACK
	MUL	PTR,2 >BUF
	ADD	P-LEXV,BUF
	GETB	STACK,2 >?TMP1
	ADD	P-LEXV,BUF
	GETB	STACK,3
	ICALL	WORD-PRINT,?TMP1,STACK
	SET	'QUOTE-FLAG,FALSE-VALUE
	SET	'P-OFLAG,FALSE-VALUE
	GET	MSG,1
	PRINT	STACK
	PRINTR	"]"


	.FUNCT	SYNTAX-CHECK,SYN,LEN,NUM,OBJ,DRIVE1,DRIVE2,PREP,VERB,?TMP2,?TMP1
	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB \?CND1
	ICALL2	NOT-IN-SENTENCE,STR?17
	RFALSE	
?CND1:	SUB	255,VERB
	GET	VERBS,STACK >SYN
	GETB	SYN,0 >LEN
	INC	'SYN
?PRG3:	GETB	SYN,P-SBITS
	BAND	STACK,P-SONUMS >NUM
	GRTR?	P-NCN,NUM /?CND5
	LESS?	NUM,1 /?CCL9
	ZERO?	P-NCN \?CCL9
	GET	P-ITBL,P-PREP1 >PREP
	ZERO?	PREP /?CTR8
	GETB	SYN,P-SPREP1
	EQUAL?	PREP,STACK \?CCL9
?CTR8:	SET	'DRIVE1,SYN
	JUMP	?CND5
?CCL9:	GETB	SYN,P-SPREP1 >?TMP1
	GET	P-ITBL,P-PREP1
	EQUAL?	?TMP1,STACK \?CND5
	EQUAL?	NUM,2 \?CCL18
	EQUAL?	P-NCN,1 \?CCL18
	SET	'DRIVE2,SYN
?CND5:	DLESS?	'LEN,1 \?CCL24
	ZERO?	DRIVE1 \?REP4
	ZERO?	DRIVE2 \?REP4
	ICALL1	DONT-UNDERSTAND
	RFALSE	
?CCL18:	GETB	SYN,P-SPREP2 >?TMP1
	GET	P-ITBL,P-PREP2
	EQUAL?	?TMP1,STACK \?CND5
	ICALL2	SYNTAX-FOUND,SYN
	RTRUE	
?CCL24:	ADD	SYN,P-SYNLEN >SYN
	JUMP	?PRG3
?REP4:	ZERO?	DRIVE1 /?CCL32
	GETB	DRIVE1,P-SFWIM1 >?TMP2
	GETB	DRIVE1,P-SLOC1 >?TMP1
	GETB	DRIVE1,P-SPREP1
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?CCL32
	PUT	P-PRSO,P-MATCHLEN,1
	PUT	P-PRSO,1,OBJ
	CALL2	SYNTAX-FOUND,DRIVE1
	RSTACK	
?CCL32:	ZERO?	DRIVE2 /?CCL36
	GETB	DRIVE2,P-SFWIM2 >?TMP2
	GETB	DRIVE2,P-SLOC2 >?TMP1
	GETB	DRIVE2,P-SPREP2
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?CCL36
	PUT	P-PRSI,P-MATCHLEN,1
	PUT	P-PRSI,1,OBJ
	CALL2	SYNTAX-FOUND,DRIVE2
	RSTACK	
?CCL36:	EQUAL?	VERB,ACT?FIND \?CCL40
	PRINTI	"That's your problem!"
	CRLF	
	RFALSE	
?CCL40:	EQUAL?	WINNER,PROTAGONIST \?PRG51
	ICALL	ORPHAN,DRIVE1,DRIVE2
	PRINTI	"[Wh"
	EQUAL?	VERB,ACT?WALK \?CCL50
	PUSH	STR?18
	JUMP	?CND48
?CCL50:	PUSH	STR?19
?CND48:	PRINT	STACK
	PRINTI	" do you want to "
	JUMP	?CND43
?PRG51:	PRINTI	"[Your command wasn't complete. Next time, type wh"
	EQUAL?	VERB,ACT?WALK \?CCL55
	PUSH	STR?18
	JUMP	?CND53
?CCL55:	PUSH	STR?19
?CND53:	PRINT	STACK
	PRINTI	" you want "
	ICALL	ARTICLE,WINNER,TRUE-VALUE
	PRINTD	WINNER
	PRINTI	" to "
?CND43:	ICALL1	VERB-PRINT
	ZERO?	DRIVE2 /?CND58
	ICALL	CLAUSE-PRINT,P-NC1,P-NC1L
?CND58:	ZERO?	DRIVE1 /?CCL62
	GETB	DRIVE1,P-SPREP1
	JUMP	?CND60
?CCL62:	GETB	DRIVE2,P-SPREP2
?CND60:	ICALL2	PREP-PRINT,STACK
	EQUAL?	WINNER,PROTAGONIST \?CCL65
	SET	'P-OFLAG,TRUE-VALUE
	PRINTI	"?]"
	CRLF	
	RFALSE	
?CCL65:	SET	'P-OFLAG,FALSE-VALUE
	PRINTI	".]"
	CRLF	
	RFALSE	


	.FUNCT	VERB-PRINT,TMP,?TMP1
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	TMP \?CCL3
	PRINTI	"tell"
	RTRUE	
?CCL3:	GETB	P-VTBL,2
	ZERO?	STACK \?CCL7
	GET	TMP,0
	PRINTB	STACK
	RTRUE	
?CCL7:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
	PUTB	P-VTBL,2,0
	RTRUE	


	.FUNCT	ORPHAN,D1,D2,CNT
	SET	'CNT,-1
	ZERO?	P-MERGED \?CND1
	PUT	P-OCLAUSE,P-MATCHLEN,0
?CND1:	GET	P-VTBL,0
	PUT	P-OVTBL,0,STACK
	GETB	P-VTBL,2
	PUTB	P-OVTBL,2,STACK
	GETB	P-VTBL,3
	PUTB	P-OVTBL,3,STACK
?PRG3:	IGRTR?	'CNT,P-ITBLLEN /?REP4
	GET	P-ITBL,CNT
	PUT	P-OTBL,CNT,STACK
	JUMP	?PRG3
?REP4:	EQUAL?	P-NCN,2 \?CND8
	PUT	P-CCTBL,CC-SBPTR,P-NC2
	PUT	P-CCTBL,CC-SEPTR,P-NC2L
	PUT	P-CCTBL,CC-DBPTR,P-NC2
	PUT	P-CCTBL,CC-DEPTR,P-NC2L
	ICALL	CLAUSE-COPY,P-ITBL,P-OTBL
?CND8:	LESS?	P-NCN,1 /?CND10
	PUT	P-CCTBL,CC-SBPTR,P-NC1
	PUT	P-CCTBL,CC-SEPTR,P-NC1L
	PUT	P-CCTBL,CC-DBPTR,P-NC1
	PUT	P-CCTBL,CC-DEPTR,P-NC1L
	ICALL	CLAUSE-COPY,P-ITBL,P-OTBL
?CND10:	ZERO?	D1 /?CCL14
	GETB	D1,P-SPREP1
	PUT	P-OTBL,P-PREP1,STACK
	PUT	P-OTBL,P-NC1,1
	RTRUE	
?CCL14:	ZERO?	D2 /FALSE
	GETB	D2,P-SPREP2
	PUT	P-OTBL,P-PREP2,STACK
	PUT	P-OTBL,P-NC2,1
	RTRUE	


	.FUNCT	CLAUSE-PRINT,BPTR,EPTR,THE?,?TMP1
	ASSIGNED?	'THE? /?CND1
	SET	'THE?,TRUE-VALUE
?CND1:	GET	P-ITBL,BPTR >?TMP1
	GET	P-ITBL,EPTR
	CALL	BUFFER-PRINT,?TMP1,STACK,THE?
	RSTACK	


	.FUNCT	BUFFER-PRINT,BEG,END,CP,NOSP,WRD,FIRST??,PN,?TMP1
	SET	'FIRST??,TRUE-VALUE
?PRG1:	EQUAL?	BEG,END /TRUE
	ZERO?	NOSP /?PRG9
	SET	'NOSP,FALSE-VALUE
	JUMP	?CND6
?PRG9:	PRINTC	32
?CND6:	GET	BEG,0 >WRD
	EQUAL?	WRD,W?HIM \?PRD14
	CALL2	VISIBLE?,P-HIM-OBJECT
	ZERO?	STACK /?CCL12
?PRD14:	EQUAL?	WRD,W?HER \?PRD17
	CALL2	VISIBLE?,P-HER-OBJECT
	ZERO?	STACK /?CCL12
?PRD17:	EQUAL?	WRD,W?THEM \?CND11
	CALL2	VISIBLE?,P-THEM-OBJECT
	ZERO?	STACK \?CND11
?CCL12:	SET	'PN,TRUE-VALUE
?CND11:	EQUAL?	WRD,W?PERIOD \?CCL24
	SET	'NOSP,TRUE-VALUE
	JUMP	?CND3
?CCL24:	EQUAL?	WRD,W?ME \?CCL26
	PRINTD	PROTAGONIST
	SET	'PN,TRUE-VALUE
	JUMP	?CND3
?CCL26:	CALL2	NAME?,WRD
	ZERO?	STACK /?CCL28
	ICALL2	CAPITALIZE,BEG
	SET	'PN,TRUE-VALUE
	JUMP	?CND3
?CCL28:	ZERO?	FIRST?? /?CND29
	ZERO?	PN \?CND29
	ZERO?	CP /?CND29
	PRINTI	"the "
?CND29:	ZERO?	P-OFLAG \?CTR37
	ZERO?	P-MERGED /?CCL38
?CTR37:	PRINTB	WRD
	JUMP	?CND36
?CCL38:	EQUAL?	WRD,W?IT \?CCL42
	CALL2	VISIBLE?,P-IT-OBJECT
	ZERO?	STACK /?CCL42
	PRINTD	P-IT-OBJECT
	JUMP	?CND36
?CCL42:	EQUAL?	WRD,W?HER \?CCL46
	ZERO?	PN \?CCL46
	PRINTD	P-HER-OBJECT
	JUMP	?CND36
?CCL46:	EQUAL?	WRD,W?THEM \?CCL50
	ZERO?	PN \?CCL50
	PRINTD	P-THEM-OBJECT
	JUMP	?CND36
?CCL50:	EQUAL?	WRD,W?HIM \?CCL54
	ZERO?	PN \?CCL54
	PRINTD	P-HIM-OBJECT
	JUMP	?CND36
?CCL54:	GETB	BEG,2 >?TMP1
	GETB	BEG,3
	ICALL	WORD-PRINT,?TMP1,STACK
?CND36:	SET	'FIRST??,FALSE-VALUE
?CND3:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1


	.FUNCT	NAME?,WRD
	EQUAL?	WRD,W?CRISP,W?VOSS,W?MACGUFFIN /TRUE
	EQUAL?	WRD,W?FESTERON,W?SHOPPE,W?MAGICK /TRUE
	EQUAL?	WRD,W?KING,W?PRINCESS,W?TASMANIA /TRUE
	EQUAL?	WRD,W?ANATINUS,W?EVIL,W?ONE /TRUE
	EQUAL?	WRD,W?WISHBRINGER,W?CHAOS,W?MR /TRUE
	EQUAL?	WRD,W?MISS,W?MS,W?ALEXIS /TRUE
	RFALSE	


	.FUNCT	CAPITALIZE,PTR,?TMP1
	GETB	PTR,3
	GETB	P-INBUF,STACK
	SUB	STACK,32
	PRINTC	STACK
	GETB	PTR,2
	SUB	STACK,1 >?TMP1
	GETB	PTR,3
	ADD	STACK,1
	CALL	WORD-PRINT,?TMP1,STACK
	RSTACK	


	.FUNCT	PREP-PRINT,PREP,SP?,WRD
	ASSIGNED?	'SP? /?CND1
	SET	'SP?,TRUE-VALUE
?CND1:	ZERO?	PREP /FALSE
	ZERO?	SP? /?CND6
	PRINTC	32
?CND6:	CALL2	PREP-FIND,PREP >WRD
	EQUAL?	WRD,W?THROUGH \?CCL12
	PRINTI	"through"
	JUMP	?CND10
?CCL12:	PRINTB	WRD
?CND10:	GET	P-ITBL,P-VERBN
	GET	STACK,0
	EQUAL?	W?SIT,STACK \?CND15
	EQUAL?	W?DOWN,WRD \?CND15
	PRINTI	" on"
?CND15:	GET	P-ITBL,P-VERBN
	GET	STACK,0
	EQUAL?	W?GET,STACK \TRUE
	EQUAL?	W?OUT,WRD \TRUE
	PRINTI	" of"
	RTRUE	


	.FUNCT	CLAUSE-COPY,SRC,DEST,INSRT,BEG,END,?TMP1
	GET	P-CCTBL,CC-SBPTR
	GET	SRC,STACK >BEG
	GET	P-CCTBL,CC-SEPTR
	GET	SRC,STACK >END
	GET	P-CCTBL,CC-DBPTR >?TMP1
	GET	P-OCLAUSE,P-MATCHLEN
	MUL	STACK,P-LEXELEN
	ADD	STACK,2
	ADD	P-OCLAUSE,STACK
	PUT	DEST,?TMP1,STACK
?PRG1:	EQUAL?	BEG,END \?CCL5
	GET	P-CCTBL,CC-DEPTR >?TMP1
	GET	P-OCLAUSE,P-MATCHLEN
	MUL	STACK,P-LEXELEN
	ADD	STACK,2
	ADD	P-OCLAUSE,STACK
	PUT	DEST,?TMP1,STACK
	RTRUE	
?CCL5:	ZERO?	INSRT /?CND6
	GET	BEG,0
	EQUAL?	P-ANAM,STACK \?CND6
	ICALL2	CLAUSE-ADD,INSRT
?CND6:	GET	BEG,0
	ICALL2	CLAUSE-ADD,STACK
	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1


	.FUNCT	CLAUSE-ADD,WRD,PTR
	GET	P-OCLAUSE,P-MATCHLEN
	ADD	STACK,2 >PTR
	SUB	PTR,1
	PUT	P-OCLAUSE,STACK,WRD
	PUT	P-OCLAUSE,PTR,0
	PUT	P-OCLAUSE,P-MATCHLEN,PTR
	RTRUE	


	.FUNCT	PREP-FIND,PREP,CNT,SIZE
	GET	PREPOSITIONS,0
	MUL	STACK,2 >SIZE
?PRG1:	IGRTR?	'CNT,SIZE /FALSE
	GET	PREPOSITIONS,CNT
	EQUAL?	STACK,PREP \?PRG1
	SUB	CNT,1
	GET	PREPOSITIONS,STACK
	RSTACK	


	.FUNCT	SYNTAX-FOUND,SYN
	SET	'P-SYNTAX,SYN
	GETB	SYN,P-SACTION >PRSA
	RETURN	PRSA


	.FUNCT	GWIM,GBIT,LBIT,PREP,OBJ,WPREP
	EQUAL?	GBIT,RLANDBIT \?CND1
	RETURN	ROOMS
?CND1:	SET	'P-GWIMBIT,GBIT
	SET	'P-SLOCBITS,LBIT
	PUT	P-MERGE,P-MATCHLEN,0
	CALL	GET-OBJECT,P-MERGE,FALSE-VALUE
	ZERO?	STACK /?CCL5
	SET	'P-GWIMBIT,0
	GET	P-MERGE,P-MATCHLEN
	EQUAL?	STACK,1 \FALSE
	GET	P-MERGE,1 >OBJ
	PRINTC	91
	CALL	PREP-PRINT,PREP,FALSE-VALUE
	ZERO?	STACK /?PRG15
	PRINTC	32
	ICALL	ARTICLE,OBJ,TRUE-VALUE
?PRG15:	PRINTD	OBJ
	PRINTC	93
	CRLF	
	RETURN	OBJ
?CCL5:	SET	'P-GWIMBIT,0
	RFALSE	


	.FUNCT	SNARF-OBJECTS,PTR
	GET	P-ITBL,P-NC1 >PTR
	ZERO?	PTR /?CND1
	GETB	P-SYNTAX,P-SLOC1 >P-SLOCBITS
	GET	P-ITBL,P-NC1L
	CALL	SNARFEM,PTR,STACK,P-PRSO
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /?CND1
	CALL2	BUT-MERGE,P-PRSO >P-PRSO
?CND1:	GET	P-ITBL,P-NC2 >PTR
	ZERO?	PTR /TRUE
	GETB	P-SYNTAX,P-SLOC2 >P-SLOCBITS
	GET	P-ITBL,P-NC2L
	CALL	SNARFEM,PTR,STACK,P-PRSI
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /TRUE
	GET	P-PRSI,P-MATCHLEN
	EQUAL?	STACK,1 \?CCL15
	CALL2	BUT-MERGE,P-PRSO >P-PRSO
	RTRUE	
?CCL15:	CALL2	BUT-MERGE,P-PRSI >P-PRSI
	RTRUE	


	.FUNCT	BUT-MERGE,TBL,LEN,BUTLEN,CNT,MATCHES,OBJ,NTBL,?TMP1,?TMP2
	SET	'CNT,1
	GET	TBL,P-MATCHLEN >LEN
	PUT	P-MERGE,P-MATCHLEN,0
?PRG1:	DLESS?	'LEN,0 /?REP2
	GET	TBL,CNT >OBJ
	ADD	P-BUTS,2 >?TMP1
	GET	P-BUTS,0
	INTBL?	OBJ,?TMP1,STACK /?CND3
	ADD	MATCHES,1
	PUT	P-MERGE,STACK,OBJ
	INC	'MATCHES
?CND3:	INC	'CNT
	JUMP	?PRG1
?REP2:	PUT	P-MERGE,P-MATCHLEN,MATCHES
	SET	'NTBL,P-MERGE
	SET	'P-MERGE,TBL
	RETURN	NTBL


	.FUNCT	SNARFEM,PTR,EPTR,TBL,BUT,LEN,WV,WRD,NW,WAS-ALL?
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	SET	'P-AND,FALSE-VALUE
	EQUAL?	P-GETFLAGS,P-ALL \?CND1
	SET	'WAS-ALL?,TRUE-VALUE
?CND1:	SET	'P-GETFLAGS,0
	PUT	P-BUTS,P-MATCHLEN,0
	PUT	TBL,P-MATCHLEN,0
	GET	PTR,0 >WRD
?PRG3:	EQUAL?	PTR,EPTR \?CCL7
	ZERO?	BUT /?PRD10
	PUSH	BUT
	JUMP	?PEN8
?PRD10:	PUSH	TBL
?PEN8:	CALL2	GET-OBJECT,STACK >WV
	ZERO?	WAS-ALL? \?CCL12
	RETURN	WV
?CCL12:	SET	'P-GETFLAGS,P-ALL
	RETURN	WV
?CCL7:	ADD	PTR,P-WORDLEN
	EQUAL?	EPTR,STACK \?CCL15
	SET	'NW,0
	JUMP	?CND13
?CCL15:	GET	PTR,P-LEXELEN >NW
?CND13:	EQUAL?	WRD,W?ALL,W?BOTH,W?EVERYTHING \?CCL18
	SET	'P-GETFLAGS,P-ALL
	EQUAL?	NW,W?OF \?CND5
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND5
?CCL18:	EQUAL?	WRD,W?BUT,W?EXCEPT \?CCL22
	ZERO?	BUT /?PRD27
	PUSH	BUT
	JUMP	?PEN25
?PRD27:	PUSH	TBL
?PEN25:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	SET	'BUT,P-BUTS
	PUT	BUT,P-MATCHLEN,0
	JUMP	?CND5
?CCL22:	CALL2	BUZZER-WORD?,WRD
	ZERO?	STACK \FALSE
	EQUAL?	WRD,W?A \?CCL31
	ZERO?	P-ADJ \?CCL34
	SET	'P-GETFLAGS,P-ONE
	EQUAL?	NW,W?OF \?CND5
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND5
?CCL34:	SET	'P-NAM,P-ONEOBJ
	ZERO?	BUT /?PRD41
	PUSH	BUT
	JUMP	?PEN39
?PRD41:	PUSH	TBL
?PEN39:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	ZERO?	NW \?CND5
	RTRUE	
?CCL31:	EQUAL?	WRD,W?AND,W?COMMA \?CCL45
	EQUAL?	NW,W?AND,W?COMMA /?CCL45
	SET	'P-AND,TRUE-VALUE
	ZERO?	BUT /?PRD52
	PUSH	BUT
	JUMP	?PEN50
?PRD52:	PUSH	TBL
?PEN50:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK \?CND5
	RFALSE	
?CCL45:	CALL	WT?,WRD,4
	ZERO?	STACK \?CND5
	EQUAL?	WRD,W?AND,W?COMMA /?CND5
	EQUAL?	WRD,W?OF \?CCL56
	ZERO?	P-GETFLAGS \?CND5
	SET	'P-GETFLAGS,P-INHIBIT
	JUMP	?CND5
?CCL56:	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL60
	CALL	ADJ-CHECK,WRD,P-ADJ
	ZERO?	STACK /?CCL60
	EQUAL?	NW,W?OF /?CCL60
	SET	'P-ADJ,WRD
	JUMP	?CND5
?CCL60:	CALL	WT?,WRD,128
	ZERO?	STACK /?CND5
	SET	'P-NAM,WRD
	SET	'P-ONEOBJ,WRD
?CND5:	EQUAL?	PTR,EPTR /?PRG3
	ADD	PTR,P-WORDLEN >PTR
	SET	'WRD,NW
	JUMP	?PRG3


	.FUNCT	GET-OBJECT,TBL,VRB,BITS,LEN,XBITS,TLEN,GCHECK,OLEN,OBJ,ADJ,X
	ASSIGNED?	'VRB /?CND1
	SET	'VRB,TRUE-VALUE
?CND1:	SET	'XBITS,P-SLOCBITS
	GET	TBL,P-MATCHLEN >TLEN
	BTST	P-GETFLAGS,P-INHIBIT /TRUE
	SET	'ADJ,P-ADJ
	ZERO?	P-NAM \?CND5
	ZERO?	P-ADJ /?CND5
	CALL	WT?,P-ADJ,128
	ZERO?	STACK /?CCL11
	SET	'P-NAM,P-ADJ
	SET	'P-ADJ,FALSE-VALUE
	JUMP	?CND5
?CCL11:	CALL	WT?,P-ADJ,16,3 >BITS
	ZERO?	BITS /?CND5
	SET	'P-DIRECTION,BITS
?CND5:	ZERO?	P-NAM \?CND13
	ZERO?	P-ADJ \?CND13
	EQUAL?	P-GETFLAGS,P-ALL /?CND13
	ZERO?	P-GWIMBIT \?CND13
	ZERO?	VRB /FALSE
	ICALL2	NOT-IN-SENTENCE,STR?20
	RFALSE	
?CND13:	EQUAL?	P-GETFLAGS,P-ALL \?CCL22
	ZERO?	P-SLOCBITS \?CND21
?CCL22:	SET	'P-SLOCBITS,-1
?CND21:	SET	'P-TABLE,TBL
?PRG25:	ZERO?	GCHECK /?CCL29
	ICALL2	GLOBAL-CHECK,TBL
	JUMP	?CND27
?CCL29:	ZERO?	LIT /?CND30
	FCLEAR	PROTAGONIST,TRANSBIT
	ICALL	DO-SL,HERE,SOG,SIR
	FSET	PROTAGONIST,TRANSBIT
?CND30:	ICALL	DO-SL,PROTAGONIST,SH,SC
?CND27:	GET	TBL,P-MATCHLEN
	SUB	STACK,TLEN >LEN
	BTST	P-GETFLAGS,P-ALL /?CND32
	BTST	P-GETFLAGS,P-ONE \?CCL35
	ZERO?	LEN /?CCL35
	EQUAL?	LEN,1 /?CND38
	RANDOM	LEN
	GET	TBL,STACK
	PUT	TBL,1,STACK
	PRINTI	"[How about "
	GET	TBL,1
	ICALL	ARTICLE,STACK,TRUE-VALUE
	GET	TBL,1
	PRINTD	STACK
	PRINTI	"?]"
	CRLF	
?CND38:	PUT	TBL,P-MATCHLEN,1
?CND32:	ADD	TLEN,1
	GET	TBL,STACK >X
	ZERO?	P-ADJ /?CND80
	ZERO?	P-NAM \?CND80
	EQUAL?	X,FALSE-VALUE,INTDIR /?CND80
	PRINT	I-ASSUME
	PRINTC	32
	ICALL	ARTICLE,X,TRUE-VALUE
	PRINTD	X
	PRINTI	".]"
	CRLF	
?CND80:	SET	'P-SLOCBITS,XBITS
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RTRUE	
?CCL35:	GRTR?	LEN,1 /?CTR44
	ZERO?	LEN \?CCL45
	EQUAL?	P-SLOCBITS,-1 /?CCL45
?CTR44:	EQUAL?	P-SLOCBITS,-1 \?CCL52
	SET	'P-SLOCBITS,XBITS
	SET	'OLEN,LEN
	GET	TBL,P-MATCHLEN
	SUB	STACK,LEN
	PUT	TBL,P-MATCHLEN,STACK
	JUMP	?PRG25
?CCL52:	ZERO?	LEN \?CND53
	SET	'LEN,OLEN
?CND53:	EQUAL?	WINNER,PROTAGONIST /?CCL57
	PRINTI	"[Please try saying that another way.]"
	CRLF	
	RFALSE	
?CCL57:	ZERO?	VRB /?CCL61
	ZERO?	P-NAM /?CCL61
	ICALL	WHICH-PRINT,TLEN,LEN,TBL
	EQUAL?	TBL,P-PRSO \?CCL66
	SET	'P-ACLAUSE,P-NC1
	JUMP	?CND64
?CCL66:	SET	'P-ACLAUSE,P-NC2
?CND64:	SET	'P-AADJ,P-ADJ
	SET	'P-ANAM,P-NAM
	ICALL	ORPHAN,FALSE-VALUE,FALSE-VALUE
	SET	'P-OFLAG,TRUE-VALUE
	JUMP	?CND55
?CCL61:	ZERO?	VRB /?CND55
	ICALL2	NOT-IN-SENTENCE,STR?20
?CND55:	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RFALSE	
?CCL45:	ZERO?	LEN \?CCL69
	ZERO?	GCHECK /?CCL69
	ZERO?	VRB /?CND72
	SET	'P-SLOCBITS,XBITS
	ZERO?	LIT \?CTR75
	CALL1	SPEAKING-VERB?
	ZERO?	STACK /?CCL76
?CTR75:	ICALL	OBJ-FOUND,NOT-HERE-OBJECT,TBL
	SET	'P-XNAM,P-NAM
	SET	'P-XADJ,P-ADJ
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RTRUE	
?CCL76:	ICALL1	TOO-DARK
?CND72:	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RFALSE	
?CCL69:	ZERO?	LEN \?CND32
	SET	'GCHECK,TRUE-VALUE
	JUMP	?PRG25


	.FUNCT	SPEAKING-VERB?,V
	ZERO?	V \?CND1
	SET	'V,PRSA
?CND1:	EQUAL?	V,V?ASK-ABOUT,V?ASK-FOR,V?HELLO /TRUE
	EQUAL?	V,V?TELL,V?QUESTION,V?REPLY /TRUE
	RFALSE	


	.FUNCT	MOBY-FIND,TBL,OBJ,LEN,FOO
	SET	'P-NAM,P-XNAM
	SET	'P-ADJ,P-XADJ
	PUT	TBL,P-MATCHLEN,0
	SET	'OBJ,1
?PRG1:	CALL2	META-LOC,OBJ >FOO
	ZERO?	FOO /?CND3
	CALL2	THIS-IT?,OBJ >FOO
	ZERO?	FOO /?CND3
	CALL	OBJ-FOUND,OBJ,TBL >FOO
?CND3:	IGRTR?	'OBJ,DUMMY-OBJECT \?PRG1
	GET	TBL,P-MATCHLEN >LEN
	EQUAL?	LEN,1 /?CCL10
	RETURN	LEN
?CCL10:	GET	TBL,1 >P-MOBY-FOUND
	RETURN	LEN


	.FUNCT	WHICH-PRINT,TLEN,LEN,TBL,OBJ,RLEN
	SET	'RLEN,LEN
	PRINTI	"Which"
	ZERO?	P-OFLAG \?PRG9
	ZERO?	P-MERGED \?PRG9
	ZERO?	P-AND /?CCL5
?PRG9:	PRINTC	32
	PRINTB	P-NAM
	JUMP	?PRG13
?CCL5:	EQUAL?	TBL,P-PRSO \?CCL12
	ICALL	CLAUSE-PRINT,P-NC1,P-NC1L,FALSE-VALUE
	JUMP	?PRG13
?CCL12:	ICALL	CLAUSE-PRINT,P-NC2,P-NC2L,FALSE-VALUE
?PRG13:	PRINTI	" do you mean,"
?PRG15:	INC	'TLEN
	GET	TBL,TLEN >OBJ
	PRINTC	32
	ICALL	ARTICLE,OBJ,TRUE-VALUE
	PRINTD	OBJ
	EQUAL?	LEN,2 \?CCL23
	EQUAL?	RLEN,2 /?PRG28
	PRINTC	44
?PRG28:	PRINTI	" or"
	JUMP	?CND21
?CCL23:	GRTR?	LEN,2 \?CND21
	PRINTC	44
?CND21:	DLESS?	'LEN,1 \?PRG15
	PRINTR	"?"


	.FUNCT	GLOBAL-CHECK,TBL,LEN,RMG,RMGL,CNT,OBJ,OBITS,FOO
	GET	TBL,P-MATCHLEN >LEN
	SET	'OBITS,P-SLOCBITS
	SET	'CNT,0
	GETPT	HERE,P?GLOBAL >RMG
	ZERO?	RMG /?CND1
	PTSIZE	RMG
	DIV	STACK,2
	SUB	STACK,1 >RMGL
?PRG3:	GET	RMG,CNT >OBJ
	CALL2	THIS-IT?,OBJ
	ZERO?	STACK /?CND5
	ICALL	OBJ-FOUND,OBJ,TBL
?CND5:	IGRTR?	'CNT,RMGL \?PRG3
?CND1:	GETPT	HERE,P?PSEUDO >RMG
	ZERO?	RMG /?CND9
	PTSIZE	RMG
	DIV	STACK,4
	SUB	STACK,1 >RMGL
	SET	'CNT,0
?PRG11:	MUL	CNT,2
	GET	RMG,STACK
	EQUAL?	P-NAM,STACK \?CCL15
	MUL	CNT,2
	ADD	STACK,1
	GET	RMG,STACK
	PUTP	PSEUDO-OBJECT,P?ACTION,STACK
	GETPT	PSEUDO-OBJECT,P?ACTION
	SUB	STACK,7 >FOO
	COPYT	P-NAM,FOO,6
	ICALL	OBJ-FOUND,PSEUDO-OBJECT,TBL
	JUMP	?CND9
?CCL15:	IGRTR?	'CNT,RMGL \?PRG11
?CND9:	GET	TBL,P-MATCHLEN
	EQUAL?	STACK,LEN \FALSE
	SET	'P-SLOCBITS,-1
	SET	'P-TABLE,TBL
	ICALL	DO-SL,GLOBAL-OBJECTS,1,1
	SET	'P-SLOCBITS,OBITS
	GET	TBL,P-MATCHLEN
	ZERO?	STACK \FALSE
	EQUAL?	PRSA,V?LOOK-INSIDE,V?DUMB-EXAMINE,V?EXAMINE /?CCL25
	EQUAL?	PRSA,V?LEAVE,V?FOLLOW,V?FIND /?CCL25
	EQUAL?	PRSA,V?THROUGH,V?SMELL,V?SEARCH /?CCL25
	EQUAL?	PRSA,V?LOOK-ON,V?WAIT-FOR,V?WALK-TO \FALSE
?CCL25:	CALL	DO-SL,ROOMS,1,1
	RSTACK	


	.FUNCT	DO-SL,OBJ,BIT1,BIT2,BITS
	ADD	BIT1,BIT2
	BTST	P-SLOCBITS,STACK \?CCL3
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCALL
	RSTACK	
?CCL3:	BTST	P-SLOCBITS,BIT1 \?CCL6
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCTOP
	RSTACK	
?CCL6:	BTST	P-SLOCBITS,BIT2 \TRUE
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCBOT
	RSTACK	


	.FUNCT	SEARCH-LIST,OBJ,TBL,LVL,NXT
	FIRST?	OBJ >OBJ \FALSE
?PRG4:	ZERO?	OBJ /FALSE
	EQUAL?	LVL,P-SRCBOT /?CND6
	GETPT	OBJ,P?SYNONYM
	ZERO?	STACK /?CND6
	CALL2	THIS-IT?,OBJ
	ZERO?	STACK /?CND6
	ICALL	OBJ-FOUND,OBJ,TBL
?CND6:	ZERO?	LVL \?PRD16
	FSET?	OBJ,SURFACEBIT \?CND13
?PRD16:	FIRST?	OBJ >NXT \?CND13
	CALL2	SEE-INSIDE?,OBJ
	ZERO?	STACK /?CND13
	FSET?	OBJ,SURFACEBIT \?CCL22
	ICALL	SEARCH-LIST,OBJ,TBL,P-SRCALL
	JUMP	?CND13
?CCL22:	ICALL	SEARCH-LIST,OBJ,TBL,P-SRCTOP
?CND13:	NEXT?	OBJ >OBJ /?PRG4
	JUMP	?PRG4


	.FUNCT	THIS-IT?,OBJ,SYNS
	ZERO?	OBJ /FALSE
	FSET?	OBJ,INVISIBLE /FALSE
	GETPT	OBJ,P?SYNONYM >SYNS
	ZERO?	SYNS /FALSE
	ZERO?	P-NAM /?CCL9
	PTSIZE	SYNS
	DIV	STACK,2
	INTBL?	P-NAM,SYNS,STACK \FALSE
?CCL9:	ZERO?	P-ADJ /?CND5
	GETPT	OBJ,P?ADJECTIVE >SYNS
	ZERO?	SYNS /FALSE
	PTSIZE	SYNS
	DIV	STACK,2
	INTBL?	P-ADJ,SYNS,STACK \FALSE
?CND5:	ZERO?	P-GWIMBIT /TRUE
	FSET?	OBJ,P-GWIMBIT /TRUE
	RFALSE	


	.FUNCT	OBJ-FOUND,OBJ,TBL,PTR
	GET	TBL,P-MATCHLEN >PTR
	ADD	PTR,1
	PUT	TBL,STACK,OBJ
	ADD	PTR,1
	PUT	TBL,P-MATCHLEN,STACK
	RTRUE	


	.FUNCT	TAKE-CHECK
	GETB	P-SYNTAX,P-SLOC1
	CALL	ITAKE-CHECK,P-PRSO,STACK
	ZERO?	STACK /FALSE
	GETB	P-SYNTAX,P-SLOC2
	CALL	ITAKE-CHECK,P-PRSI,STACK
	RSTACK	


	.FUNCT	ITAKE-CHECK,TBL,BITS,PTR,OBJ,TAKEN
	GET	TBL,P-MATCHLEN >PTR
	ZERO?	PTR /TRUE
	BTST	BITS,SHAVE /?PRG8
	BTST	BITS,STAKE \TRUE
?PRG8:	DLESS?	'PTR,0 /TRUE
	ADD	PTR,1
	GET	TBL,STACK >OBJ
	EQUAL?	OBJ,IT \?CCL14
	CALL2	ACCESSIBLE?,P-IT-OBJECT
	ZERO?	STACK \?CCL17
	ICALL1	REFERRING
	RFALSE	
?CCL17:	SET	'OBJ,P-IT-OBJECT
	JUMP	?CND12
?CCL14:	EQUAL?	OBJ,HER \?CCL19
	CALL2	ACCESSIBLE?,P-HER-OBJECT
	ZERO?	STACK \?CCL22
	ICALL1	REFERRING
	RFALSE	
?CCL22:	SET	'OBJ,P-HER-OBJECT
	JUMP	?CND12
?CCL19:	EQUAL?	OBJ,HIM \?CCL24
	CALL2	ACCESSIBLE?,P-HIM-OBJECT
	ZERO?	STACK \?CCL27
	ICALL1	REFERRING
	RFALSE	
?CCL27:	SET	'OBJ,P-HIM-OBJECT
	JUMP	?CND12
?CCL24:	EQUAL?	OBJ,THEM \?CND12
	CALL2	ACCESSIBLE?,P-THEM-OBJECT
	ZERO?	STACK \?CCL31
	ICALL1	REFERRING
	RFALSE	
?CCL31:	SET	'OBJ,P-THEM-OBJECT
?CND12:	CALL2	ULTIMATELY-IN?,OBJ
	ZERO?	STACK \?PRG8
	EQUAL?	OBJ,HANDS /?PRG8
	SET	'PRSO,OBJ
	FSET?	OBJ,TRYTAKEBIT \?CCL38
	SET	'TAKEN,TRUE-VALUE
	JUMP	?CND36
?CCL38:	EQUAL?	WINNER,PROTAGONIST /?CCL40
	SET	'TAKEN,FALSE-VALUE
	JUMP	?CND36
?CCL40:	BTST	BITS,STAKE \?CCL42
	CALL2	ITAKE,FALSE-VALUE
	EQUAL?	STACK,TRUE-VALUE \?CCL42
	SET	'TAKEN,FALSE-VALUE
	JUMP	?CND36
?CCL42:	SET	'TAKEN,TRUE-VALUE
?CND36:	ZERO?	TAKEN /?CCL47
	BTST	BITS,SHAVE \?CCL47
	PRINTI	"[You don't seem to be holding"
	GET	TBL,P-MATCHLEN
	LESS?	1,STACK \?CCL54
	PRINTI	" all those things"
	JUMP	?PRG65
?CCL54:	EQUAL?	OBJ,NOT-HERE-OBJECT \?CCL58
	PRINTI	" that"
	JUMP	?PRG65
?CCL58:	ICALL2	THIS-IS-IT,OBJ
	PRINTC	32
	ICALL	ARTICLE,OBJ,TRUE-VALUE
	PRINTD	OBJ
?PRG65:	PRINTI	".]"
	CRLF	
	RFALSE	
?CCL47:	ZERO?	TAKEN \?PRG8
	EQUAL?	WINNER,PROTAGONIST \?PRG8
	PRINTI	"[taking "
	ICALL	ARTICLE,PRSO,TRUE-VALUE
	PRINTD	PRSO
	ZERO?	ITAKE-LOC /?PRG80
	PRINTI	" from "
	ICALL	ARTICLE,ITAKE-LOC,TRUE-VALUE
	PRINTD	ITAKE-LOC
?PRG80:	PRINTI	" first]"
	CRLF	
	JUMP	?PRG8


	.FUNCT	MANY-CHECK,LOSS,TMP,?TMP1
	GET	P-PRSO,P-MATCHLEN
	GRTR?	STACK,1 \?CCL3
	GETB	P-SYNTAX,P-SLOC1
	BTST	STACK,SMANY /?CCL3
	SET	'LOSS,1
	JUMP	?CND1
?CCL3:	GET	P-PRSI,P-MATCHLEN
	GRTR?	STACK,1 \?CND1
	GETB	P-SYNTAX,P-SLOC2
	BTST	STACK,SMANY /?CND1
	SET	'LOSS,2
?CND1:	ZERO?	LOSS /TRUE
	PRINTC	91
	PRINT	CANT
	PRINTI	" use more than one object at a time with """
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	TMP \?CCL16
	PRINTI	"tell"
	JUMP	?PRG23
?CCL16:	ZERO?	P-OFLAG \?CTR19
	ZERO?	P-MERGED /?CCL20
?CTR19:	GET	TMP,0
	PRINTB	STACK
	JUMP	?PRG23
?CCL20:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
?PRG23:	PRINTI	".""]"
	CRLF	
	RFALSE	


	.FUNCT	LIT?,RM,RMBIT,OHERE,LIT
	ASSIGNED?	'RMBIT /?CND1
	SET	'RMBIT,TRUE-VALUE
?CND1:	ZERO?	ALWAYS-LIT? /?CCL5
	EQUAL?	WINNER,PROTAGONIST /TRUE
?CCL5:	ZERO?	ECLIPSE? \FALSE
	SET	'P-GWIMBIT,ONBIT
	SET	'OHERE,HERE
	SET	'HERE,RM
	ZERO?	RMBIT /?CCL11
	FSET?	RM,ONBIT \?CCL11
	SET	'LIT,TRUE-VALUE
	JUMP	?CND9
?CCL11:	PUT	P-MERGE,P-MATCHLEN,0
	SET	'P-TABLE,P-MERGE
	SET	'P-SLOCBITS,-1
	EQUAL?	OHERE,RM \?CND14
	ICALL	DO-SL,WINNER,1,1
	EQUAL?	WINNER,PROTAGONIST /?CND14
	IN?	PROTAGONIST,RM \?CND14
	ICALL	DO-SL,PROTAGONIST,1,1
?CND14:	ICALL	DO-SL,RM,1,1
	GET	P-TABLE,P-MATCHLEN
	GRTR?	STACK,0 \?CND9
	SET	'LIT,TRUE-VALUE
?CND9:	SET	'HERE,OHERE
	SET	'P-GWIMBIT,0
	RETURN	LIT


	.FUNCT	PICK-ONE,FROB,THIS,L,CNT,RND,MSG,RFROB
	GET	FROB,0 >L
	GET	FROB,1 >CNT
	DEC	'L
	ADD	FROB,2 >FROB
	MUL	CNT,2
	ADD	FROB,STACK >RFROB
	ZERO?	THIS /?CCL3
	ZERO?	CNT \?CCL3
	SET	'RND,THIS
	JUMP	?CND1
?CCL3:	SUB	L,CNT
	RANDOM	STACK >RND
?CND1:	GET	RFROB,RND >MSG
	GET	RFROB,1
	PUT	RFROB,RND,STACK
	PUT	RFROB,1,MSG
	INC	'CNT
	EQUAL?	CNT,L \?CND6
	SET	'CNT,0
?CND6:	PUT	FROB,0,CNT
	RETURN	MSG


	.FUNCT	DONT-HAVE?,OBJ,WHERE
	LOC	OBJ >WHERE
	EQUAL?	WHERE,PROTAGONIST /FALSE
	IN?	WHERE,PROTAGONIST \?CCL5
	PRINTI	"You'll have to take "
	ICALL	ARTICLE,OBJ,TRUE-VALUE
	PRINTD	OBJ
	PRINTC	32
	FSET?	WHERE,CONTBIT \?PRG15
	PRINTI	"out"
	JUMP	?PRG17
?PRG15:	PRINTI	"off"
?PRG17:	PRINTI	" of "
	ICALL	ARTICLE,WHERE,TRUE-VALUE
	PRINTD	WHERE
	PRINTR	" first."
?CCL5:	ICALL2	NOT-HOLDING,OBJ
	RTRUE	


	.FUNCT	NOT-HOLDING,OBJ
	PRINTI	"You're not holding "
	ZERO?	OBJ /?PRG6
	ICALL	ARTICLE,OBJ,TRUE-VALUE
	PRINTD	OBJ
	JUMP	?PRG8
?PRG6:	PRINTI	"that"
?PRG8:	PRINTR	"."


	.FUNCT	ASKING?,ACTOR
	EQUAL?	PRSA,V?QUESTION,V?ASK-FOR,V?ASK-ABOUT \FALSE
	EQUAL?	PRSO,ACTOR /TRUE
	RFALSE	


	.FUNCT	TALKING-TO?,ACTOR
	CALL2	ASKING?,ACTOR
	ZERO?	STACK \TRUE
	EQUAL?	PRSA,V?WAVE-AT,V?HELLO,V?TELL /?PRD7
	EQUAL?	PRSA,V?ALARM,V?REPLY \FALSE
?PRD7:	EQUAL?	PRSO,ACTOR /TRUE
	RFALSE	


	.FUNCT	TOUCHING?,THING
	EQUAL?	PRSA,V?TAKE,V?RUB,V?SHAKE /TRUE
	EQUAL?	PRSA,V?SWING,V?PLAY,V?SPIN /TRUE
	EQUAL?	PRSA,V?CLEAN,V?PUT,V?PUT-ON /TRUE
	EQUAL?	PRSA,V?MOVE,V?PULL,V?PUSH /TRUE
	EQUAL?	PRSA,V?PUT-UNDER,V?PUT-BEHIND,V?SMELL /TRUE
	EQUAL?	PRSA,V?KISS /TRUE
	CALL2	HURT?,THING
	ZERO?	STACK /FALSE
	RTRUE	


	.FUNCT	HURT?,THING
	EQUAL?	PRSA,V?MUNG,V?KICK,V?KILL /?PRD5
	EQUAL?	PRSA,V?KNOCK,V?SQUEEZE,V?CUT /?PRD5
	EQUAL?	PRSA,V?BITE,V?RAPE,V?SHAKE \?CCL3
?PRD5:	EQUAL?	PRSO,THING /TRUE
?CCL3:	EQUAL?	PRSA,V?THROW \FALSE
	EQUAL?	PRSI,THING /TRUE
	RFALSE	


	.FUNCT	ENTER-FROM?,ENTRY,DEST,PLACE
	EQUAL?	PRSA,V?ENTER,V?THROUGH,V?WALK-TO \FALSE
	EQUAL?	HERE,ENTRY \?CCL6
	ICALL2	DO-WALK,P?IN
	RTRUE	
?CCL6:	ZERO?	DEST /?CCL8
	ZERO?	PLACE /?CCL8
	EQUAL?	HERE,DEST \?CCL8
	ICALL2	ALREADY-IN,PLACE
	RTRUE	
?CCL8:	ICALL1	HOW?
	RTRUE	


	.FUNCT	USE-DOOR?,OUTSIDE
	EQUAL?	PRSA,V?THROUGH,V?ENTER,V?WALK-TO /?CTR2
	EQUAL?	PRSA,V?USE \?CCL3
?CTR2:	EQUAL?	HERE,OUTSIDE \?CCL8
	ICALL2	DO-WALK,P?IN
	RTRUE	
?CCL8:	ICALL2	DO-WALK,P?OUT
	RTRUE	
?CCL3:	EQUAL?	PRSA,V?EXIT \FALSE
	EQUAL?	HERE,OUTSIDE \?CCL13
	ICALL1	V-WALK-AROUND
	RTRUE	
?CCL13:	ICALL2	DO-WALK,P?OUT
	RTRUE	


	.FUNCT	ANYONE-HERE?,OBJ
	EQUAL?	HERE,CLIFF-BOTTOM \?CCL3
	IN?	VULTURE,GNARLED-TREE \?CCL3
	RETURN	VULTURE
?CCL3:	FIRST?	HERE >OBJ /?PRG7
?PRG7:	ZERO?	OBJ \?CCL11
	RETURN	OBJ
?CCL11:	FSET?	OBJ,ACTORBIT \?CCL13
	EQUAL?	OBJ,PROTAGONIST,VULTURE,ALEXIS /?CCL13
	RETURN	OBJ
?CCL13:	NEXT?	OBJ >OBJ /?PRG7
	JUMP	?PRG7


	.FUNCT	FIXED-FONT-ON
	GET	0,8
	BOR	STACK,2
	PUT	0,8,STACK
	RTRUE	


	.FUNCT	FIXED-FONT-OFF
	GET	0,8
	BAND	STACK,-3
	PUT	0,8,STACK
	RTRUE	


	.FUNCT	GETTING-INTO?
	EQUAL?	PRSA,V?WALK-TO,V?THROUGH,V?ENTER /TRUE
	EQUAL?	PRSA,V?SIT,V?STAND-ON,V?LIE-DOWN /TRUE
	EQUAL?	PRSA,V?CLIMB-UP,V?CLIMB-ON,V?LEAP /TRUE
	EQUAL?	PRSA,V?SWIM,V?WEAR,V?WALK-AROUND /TRUE
	RFALSE	


	.FUNCT	SAY-THE,THING
	PRINTI	"The "
	PRINTD	THING
	RTRUE	


	.FUNCT	BUT-THE,THING
	PRINTI	"But "
	ICALL	ARTICLE,THING,TRUE-VALUE
	PRINTD	THING
	PRINTC	32
	RTRUE	


	.FUNCT	MOVING?,THING
	EQUAL?	PRSA,V?MOVE,V?PULL,V?PUSH /?PRD5
	EQUAL?	PRSA,V?TAKE,V?TURN,V?PUSH-TO /?PRD5
	EQUAL?	PRSA,V?RAISE,V?SPIN,V?SHAKE \FALSE
?PRD5:	EQUAL?	PRSO,THING /TRUE
	RFALSE	


	.FUNCT	NOT-HERE-OBJECT-F,TBL,PRSO?,OBJ
	SET	'PRSO?,TRUE-VALUE
	EQUAL?	PRSO,NOT-HERE-OBJECT \?CCL3
	EQUAL?	PRSI,NOT-HERE-OBJECT \?CCL3
	PRINTR	"Those things aren't here!"
?CCL3:	EQUAL?	PRSO,NOT-HERE-OBJECT \?CCL9
	SET	'TBL,P-PRSO
	JUMP	?CND1
?CCL9:	SET	'TBL,P-PRSI
	SET	'PRSO?,FALSE-VALUE
?CND1:	ZERO?	PRSO? /?CCL12
	EQUAL?	PRSA,V?FIND,V?FOLLOW,V?BUY /?CCL14
	EQUAL?	PRSA,V?WAIT-FOR /?CCL14
	EQUAL?	PRSA,V?TAKE \?PRG29
	EQUAL?	WINNER,PROTAGONIST /?PRG29
?CCL14:	CALL	FIND-NOT-HERE,TBL,PRSO? >OBJ
	ZERO?	OBJ /FALSE
	EQUAL?	OBJ,NOT-HERE-OBJECT /?PRG29
	RETURN	2
?CCL12:	EQUAL?	PRSA,V?TELL,V?ASK-ABOUT,V?ASK-FOR /FALSE
?PRG29:	PRINT	CANT
	PRINTI	" see"
	EQUAL?	P-XNAM,W?GRAVEDIGGER,W?DIGGER,W?ONE \?CCL33
	PRINTI	" the"
	JUMP	?CND31
?CCL33:	CALL2	NAME?,P-XNAM
	ZERO?	STACK \?CND31
	PRINTI	" any"
?CND31:	ICALL2	NOT-HERE-PRINT,PRSO?
	PRINTI	" here!"
	EQUAL?	HERE,FUZZY \?CND41
	PRINTI	" Everything is too "
	CALL2	PICK-ONE,BLURS
	PRINT	STACK
	PRINTC	46
?CND41:	CRLF	
	ICALL1	PCLEAR
	RETURN	2


	.FUNCT	FIND-NOT-HERE,TBL,PRSO?,M-F,OBJ
	CALL2	MOBY-FIND,TBL >M-F
	EQUAL?	1,M-F \?CCL3
	ZERO?	PRSO? /?CCL6
	SET	'PRSO,P-MOBY-FOUND
	RFALSE	
?CCL6:	SET	'PRSI,P-MOBY-FOUND
	RFALSE	
?CCL3:	ZERO?	PRSO? \?CCL8
	PRINTI	"You wouldn't find any"
	ICALL2	NOT-HERE-PRINT,PRSO?
	PRINTR	" there."
?CCL8:	RETURN	NOT-HERE-OBJECT


	.FUNCT	NOT-HERE-PRINT,PRSO?,?TMP1
	ZERO?	P-OFLAG /?CCL3
	ZERO?	P-XADJ /?CND4
	PRINTC	32
	PRINTB	P-XADJ
?CND4:	ZERO?	P-XNAM /FALSE
	PRINTC	32
	PRINTB	P-XNAM
	RTRUE	
?CCL3:	ZERO?	PRSO? /?CCL14
	GET	P-ITBL,P-NC1 >?TMP1
	GET	P-ITBL,P-NC1L
	CALL	BUFFER-PRINT,?TMP1,STACK,FALSE-VALUE
	RSTACK	
?CCL14:	GET	P-ITBL,P-NC2 >?TMP1
	GET	P-ITBL,P-NC2L
	CALL	BUFFER-PRINT,?TMP1,STACK,FALSE-VALUE
	RSTACK	


	.FUNCT	PRINT-CONTENTS,THING,OBJ,NXT,1ST?,IT?,TWO?
	SET	'1ST?,TRUE-VALUE
	FIRST?	THING >OBJ /?PRG2
?PRG2:	ZERO?	OBJ /?REP3
	NEXT?	OBJ >NXT /?BOGUS7
?BOGUS7:	FSET?	OBJ,INVISIBLE /?CCL9
	EQUAL?	OBJ,WINNER \?CND8
?CCL9:	MOVE	OBJ,C-OBJECT
?CND8:	SET	'OBJ,NXT
	JUMP	?PRG2
?REP3:	FIRST?	THING >OBJ /?BOGUS12
?BOGUS12:	ZERO?	OBJ \?PRG18
	PRINTI	"nothing "
	CALL2	PICK-ONE,YAWNS
	PRINT	STACK
	JUMP	?CND13
?PRG18:	ZERO?	OBJ /?CCL22
	NEXT?	OBJ >NXT /?BOGUS23
?BOGUS23:	ZERO?	1ST? /?CCL26
	SET	'1ST?,FALSE-VALUE
	JUMP	?CND24
?CCL26:	ZERO?	NXT /?PRG32
	PRINTI	", "
	JUMP	?CND24
?PRG32:	PRINTI	" and "
?CND24:	ICALL2	ARTICLE,OBJ
	ZERO?	FUZZY? /?PRG38
	CALL2	PICK-ONE,BLURS
	PRINT	STACK
	PRINTC	32
?PRG38:	PRINTD	OBJ
	FSET?	OBJ,WORNBIT \?CND40
	PRINTI	" [being worn]"
?CND40:	FSET?	OBJ,ONBIT \?CND44
	PRINTI	" [providing light]"
?CND44:	ZERO?	BROOM-SIT? /?CND48
	EQUAL?	OBJ,BROOM \?CND48
	IN?	BROOM,PROTAGONIST \?CND48
	PRINTI	" [on which you're sitting]"
?CND48:	ZERO?	IT? \?CCL57
	ZERO?	TWO? \?CCL57
	SET	'IT?,OBJ
	JUMP	?CND55
?CCL57:	SET	'TWO?,TRUE-VALUE
	SET	'IT?,FALSE-VALUE
?CND55:	SET	'OBJ,NXT
	JUMP	?PRG18
?CCL22:	ZERO?	IT? /?CND13
	ZERO?	TWO? \?CND13
	ICALL2	THIS-IS-IT,IT?
?CND13:	CALL	MOVE-ALL,C-OBJECT,THING
	RSTACK	


	.FUNCT	MOVE-ALL,FROM,TO,OBJ,NXT
	FIRST?	FROM >OBJ /?PRG2
?PRG2:	ZERO?	OBJ /TRUE
	NEXT?	OBJ >NXT /?BOGUS7
?BOGUS7:	FCLEAR	OBJ,WORNBIT
	MOVE	OBJ,TO
	SET	'OBJ,NXT
	JUMP	?PRG2


	.FUNCT	DESCRIBE-OBJECTS,OBJ,NXT,STR,1ST?,TWO?,IT?
	SET	'1ST?,TRUE-VALUE
	ZERO?	LIT \?CND1
	ICALL1	TOO-DARK
	RTRUE	
?CND1:	FIRST?	HERE >OBJ /?BOGUS3
?BOGUS3:	ZERO?	OBJ /TRUE
?PRG6:	ZERO?	OBJ /?REP7
	NEXT?	OBJ >NXT /?BOGUS11
?BOGUS11:	FSET?	OBJ,INVISIBLE /?CCL13
	FSET?	OBJ,NDESCBIT /?CCL13
	EQUAL?	OBJ,WINNER \?CND12
?CCL13:	MOVE	OBJ,DUMMY-OBJECT
?CND12:	SET	'OBJ,NXT
	JUMP	?PRG6
?REP7:	FIRST?	HERE >OBJ /?PRG18
?PRG18:	ZERO?	OBJ /?REP19
	NEXT?	OBJ >NXT /?BOGUS23
?BOGUS23:	GETP	OBJ,P?FDESC >STR
	ZERO?	STR /?CND24
	FSET?	OBJ,TOUCHBIT /?CND24
	CRLF	
	PRINT	STR
	CRLF	
	MOVE	OBJ,DUMMY-OBJECT
?CND24:	SET	'OBJ,NXT
	JUMP	?PRG18
?REP19:	FIRST?	HERE >OBJ /?PRG31
?PRG31:	ZERO?	OBJ /?REP32
	NEXT?	OBJ >NXT /?BOGUS36
?BOGUS36:	GETP	OBJ,P?DESCFCN >STR
	ZERO?	STR /?CND37
	CRLF	
	CALL	STR,M-OBJDESC >STR
	CRLF	
	MOVE	OBJ,DUMMY-OBJECT
?CND37:	SET	'OBJ,NXT
	JUMP	?PRG31
?REP32:	FIRST?	HERE >OBJ /?BOGUS39
?BOGUS39:	ZERO?	OBJ /?CND40
?PRG42:	ZERO?	OBJ /?CCL46
	NEXT?	OBJ >NXT /?BOGUS47
?BOGUS47:	ZERO?	1ST? /?CCL50
	SET	'1ST?,FALSE-VALUE
	CRLF	
	ZERO?	NXT /?PRG56
	PRINT	YOU-SEE
	JUMP	?CND48
?PRG56:	PRINTI	"There's "
	JUMP	?CND48
?CCL50:	ZERO?	NXT /?PRG63
	PRINTI	", "
	JUMP	?CND48
?PRG63:	PRINTI	" and "
?CND48:	ICALL2	ARTICLE,OBJ
	PRINTD	OBJ
	FSET?	OBJ,ONBIT \?CND67
	PRINTI	" [providing light]"
?CND67:	CALL2	SEE-INSIDE?,OBJ
	ZERO?	STACK /?CND71
	CALL2	SEE-ANYTHING-IN?,OBJ
	ZERO?	STACK /?CND71
	EQUAL?	OBJ,COAT /?CND71
	PRINTI	" with "
	ICALL2	PRINT-CONTENTS,OBJ
	FSET?	OBJ,CONTBIT \?PRG83
	PRINTI	" in"
	JUMP	?PRG85
?PRG83:	PRINTI	" on"
?PRG85:	PRINTI	" it"
?CND71:	ZERO?	IT? \?CCL89
	ZERO?	TWO? \?CCL89
	SET	'IT?,OBJ
	JUMP	?CND87
?CCL89:	SET	'TWO?,TRUE-VALUE
	SET	'IT?,FALSE-VALUE
?CND87:	SET	'OBJ,NXT
	JUMP	?PRG42
?CCL46:	ZERO?	IT? /?PRG96
	ZERO?	TWO? \?PRG96
	ICALL2	THIS-IS-IT,IT?
?PRG96:	PRINTI	" here."
	CRLF	
?CND40:	CALL	MOVE-ALL,DUMMY-OBJECT,HERE
	RSTACK	


	.FUNCT	SEE-ANYTHING-IN?,THING,OBJ,NXT,ANY?
	FIRST?	THING >OBJ /?PRG2
?PRG2:	ZERO?	OBJ /?REP3
	FSET?	OBJ,INVISIBLE /?CND7
	FSET?	OBJ,NDESCBIT /?CND7
	EQUAL?	OBJ,WINNER /?CND7
	SET	'ANY?,TRUE-VALUE
	RETURN	ANY?
?CND7:	NEXT?	OBJ >OBJ /?PRG2
	JUMP	?PRG2
?REP3:	RETURN	ANY?


	.FUNCT	GLOBAL-IN?,OBJ1,OBJ2,T
	GETPT	OBJ2,P?GLOBAL >T
	ZERO?	T /FALSE
	PTSIZE	T
	DIV	STACK,2
	INTBL?	OBJ1,T,STACK /?CND1
?CND1:	RSTACK	


	.FUNCT	ARTICLE,OBJ,THE
	FSET?	OBJ,NARTICLEBIT /FALSE
	ZERO?	THE /?CCL5
	PRINTI	"the "
	RTRUE	
?CCL5:	FSET?	OBJ,VOWELBIT \?PRG12
	PRINTI	"an "
	RTRUE	
?PRG12:	PRINTI	"a "
	RTRUE	


	.FUNCT	ULTIMATELY-IN?,OBJ,CONT
	ZERO?	CONT \?CND1
	SET	'CONT,WINNER
?CND1:	ZERO?	OBJ /FALSE
	IN?	OBJ,CONT /TRUE
	IN?	OBJ,ROOMS /FALSE
	LOC	OBJ
	CALL	ULTIMATELY-IN?,STACK,CONT
	RSTACK	


	.FUNCT	WHAT-A-CONCEPT
	PRINTR	"What a concept!"


	.FUNCT	YOU-DONT-NEED,THING,STRING?
	PRINTI	"[You don't need to refer to "
	ZERO?	STRING? /?CCL5
	PRINTI	"the "
	PRINT	THING
	JUMP	?PRG10
?CCL5:	ICALL	ARTICLE,THING,TRUE-VALUE
	PRINTD	THING
?PRG10:	PRINTR	" that way to finish this story.]"


	.FUNCT	ITS-CLOSED,OBJ
	ICALL2	THIS-IS-IT,OBJ
	ICALL2	SAY-THE,OBJ
	ICALL1	IS-CLOSED
	CRLF	
	RTRUE	


	.FUNCT	IS-CLOSED
	PRINTI	" is closed."
	RTRUE	


	.FUNCT	IF-YOU-TRIED
	PRINTR	" if you tried that!"


	.FUNCT	AND-DROPS-OUT,THING
	PRINTI	" and "
	FCLEAR	THING,WORNBIT
	EQUAL?	HERE,FOG \?CCL5
	PRINTI	"disappears in the fog."
	CRLF	
	MOVE	THING,CLIFF-BOTTOM
	RTRUE	
?CCL5:	EQUAL?	HERE,STEEP-TRAIL \?CCL9
	PRINTI	"tumbles over the edge of the cliff."
	CRLF	
	MOVE	THING,CLIFF-BOTTOM
	RTRUE	
?CCL9:	EQUAL?	HERE,FUZZY \?PRG16
	PRINTI	"disappears in the fuzziness."
	CRLF	
	MOVE	THING,FUZZY-FROM
	RTRUE	
?PRG16:	PRINTI	"lands at your feet."
	CRLF	
	EQUAL?	HERE,OUTSIDE-COTTAGE \?CCL20
	CRLF	
	ICALL	PERFORM,V?GIVE,THING,POOCH
	SET	'CLOCK-WAIT,TRUE-VALUE
	RTRUE	
?CCL20:	MOVE	THING,HERE
	RTRUE	


	.FUNCT	OPEN-CLOSED,THING,N?
	FSET?	THING,OPENBIT \?PRG10
	ZERO?	N? /?PRG8
	PRINTC	110
?PRG8:	PRINTI	" open "
	RTRUE	
?PRG10:	PRINTI	" closed "
	RTRUE	


	.FUNCT	WHICH-TOWN,STR
	PRINTC	32
	ZERO?	SKEWED? /?PRG8
	ZERO?	SUCCESS? /?PRG10
?PRG8:	PRINTI	"Festeron"
	JUMP	?CND3
?PRG10:	PRINTI	"Witchville"
?CND3:	ZERO?	STR /FALSE
	PRINTC	32
	PRINT	STR
	RTRUE	


	.FUNCT	I-BEFORE-FIVE
	EQUAL?	SCORE,16 \?CCL3
	ZERO?	MOVES \?CCL6
	CALL1	BETTER-HURRY
	RSTACK	
?CCL6:	EQUAL?	MOVES,30 \FALSE
	CALL2	BETTER-HURRY,TRUE-VALUE
	RSTACK	
?CCL3:	EQUAL?	SCORE,17 \FALSE
	EQUAL?	HERE,INSIDE-SHOPPE /FALSE
	CALL2	FIRED,TRUE-VALUE
	RSTACK	


	.FUNCT	I-BREAK-IN
	EQUAL?	HERE,JAIL-CELL \FALSE
	RANDOM	100
	LESS?	10,STACK /FALSE
	CRLF	
	CALL1	HEAR-WAILS
	RSTACK	


	.FUNCT	I-CREAK
	EQUAL?	HERE,EDGE-OF-LAKE \FALSE
	FSET?	NORTH-GATE,RMUNGBIT \?CCL6
	FCLEAR	NORTH-GATE,RMUNGBIT
	RTRUE	
?CCL6:	CALL2	INT,I-CREAK
	PUT	STACK,0,0
	FCLEAR	NORTH-GATE,LOCKEDBIT
	FSET	NORTH-GATE,OPENBIT
	ICALL2	THIS-IS-IT,NORTH-GATE
	CRLF	
	PRINTI	"A rusty ""click!"" draws your eyes to the "
	PRINTD	NORTH-GATE
	PRINTR	". You watch as it slowly creaks open, all by itself!"


	.FUNCT	I-VULTURE
	ZERO?	ECLIPSE? \TRUE
	ZERO?	FUZZY? \TRUE
	FSET?	HERE,INDOORSBIT /TRUE
	EQUAL?	HERE,WEST-OF-HOUSE /TRUE
	FSET?	VULTURE,RMUNGBIT /?CCL9
	RANDOM	100
	LESS?	5,STACK /FALSE
?CCL9:	FCLEAR	VULTURE,RMUNGBIT
	MOVE	VULTURE,HERE
	CRLF	
	CALL1	SEE-VULTURE
	RSTACK	


	.FUNCT	I-BEFORE-MOONSET,H
	GRTR?	SCORE,17 /TRUE
	GRTR?	SCORE,5 \?CCL5
	CRLF	
	FSET?	HERE,INDOORSBIT /?PRG13
	ZERO?	FUZZY? \?PRG13
	ZERO?	ECLIPSE? \?PRG13
	PRINTI	"You watch with horror as the "
	PRINTD	MOON
	PRINTI	" slowly sets in the western sky."
	CRLF	
	CRLF	
?PRG13:	PRINTI	"Out of nowhere, the sad voice of the "
	PRINTD	OLD-WOMAN
	PRINTI	" from the "
	PRINTD	MAGICK-SHOPPE
	PRINTI	" rises around you. ""Your quest is over"
	PRINT	ADVENTURER
	PRINTI	". The moon is set, and "
	PRINTD	CHAOS
	PRINTI	" is no more. "
	ICALL1	THANKS-ANYWAY
	CALL1	BAD-ENDING
	RSTACK	
?CCL5:	ZERO?	MOVES \FALSE
	SUB	6,SCORE >H
	ICALL1	SAY-HURRY
	PRINTI	"You've only got "
	EQUAL?	H,1 \?PRG24
	PRINTI	"one more hour"
	JUMP	?PRG26
?PRG24:	PRINTN	H
	PRINTI	" hours"
?PRG26:	PRINTI	" before the "
	PRINTD	MOON
	PRINTR	" sets!)"


	.FUNCT	I-PROMPT-1
	SET	'P-PROMPT,1
	RFALSE	


	.FUNCT	I-PROMPT-2
	ZERO?	P-PROMPT /FALSE
	SET	'P-PROMPT,FALSE-VALUE
	CRLF	
	PRINTI	"[You won't see the ""What next?"" prompt any more.]"
	CALL2	INT,I-PROMPT-2
	PUT	STACK,0,0
	RFALSE	


	.FUNCT	I-LUCK,SHUTOFF?
	ZERO?	NO-LUCK? \TRUE
	IN?	SHOE,PROTAGONIST \?CCL5
	IN?	WISHBRINGER,PROTAGONIST \?CCL5
	FSET?	WISHBRINGER,ONBIT \?CCL5
	ZERO?	SHUTOFF? \?CCL5
	ZERO?	LUCKY? \?CND3
	FSET	SHOE,ONBIT
	ICALL2	THIS-IS-IT,SHOE
	SET	'LUCKY?,TRUE-VALUE
	CRLF	
	ICALL2	SAY-THE,SHOE
	PRINTI	" is twinkling again."
	CRLF	
	JUMP	?CND3
?CCL5:	ZERO?	LUCKY? /?CND3
	CALL2	VISIBLE?,SHOE
	ZERO?	STACK /?CND16
	ICALL2	THIS-IS-IT,SHOE
	CRLF	
	ICALL2	SAY-THE,SHOE
	PRINTI	" isn't twinkling any more."
	CRLF	
?CND16:	FCLEAR	SHOE,ONBIT
	SET	'LUCKY?,FALSE-VALUE
?CND3:	ZERO?	SHUTOFF? /FALSE
	SET	'NO-LUCK?,TRUE-VALUE
	RETURN	NO-LUCK?


	.FUNCT	I-GLOW
	ZERO?	ECLIPSE? \FALSE
	IN?	WISHBRINGER,PROTAGONIST \?CCL5
	FSET?	WISHBRINGER,TOOLBIT \?CCL8
	FCLEAR	WISHBRINGER,TOOLBIT
	CRLF	
	PRINTI	"As your fingers close around the "
	PRINTD	WISHBRINGER
	PRINTI	" it begins to glow"
	ICALL1	SAY-GLOW
	JUMP	?CND6
?CCL8:	FSET?	WISHBRINGER,RMUNGBIT \FALSE
	CRLF	
	ICALL2	SAY-THE,WISHBRINGER
	PRINTI	" begins to glow again."
	CRLF	
?CND6:	FSET	WISHBRINGER,ONBIT
	FCLEAR	WISHBRINGER,RMUNGBIT
	ZERO?	LIT \?CND15
	SET	'LIT,TRUE-VALUE
	CRLF	
	ICALL1	V-LOOK
?CND15:	FSET?	LUCK,TOUCHBIT \FALSE
	IN?	SHOE,PROTAGONIST \FALSE
	CALL1	I-LUCK
	RSTACK	
?CCL5:	FSET?	WISHBRINGER,RMUNGBIT /FALSE
	FSET	WISHBRINGER,RMUNGBIT
	FCLEAR	WISHBRINGER,ONBIT
	CALL2	VISIBLE?,WISHBRINGER
	ZERO?	STACK /?CND24
	CRLF	
	ICALL2	SAY-THE,WISHBRINGER
	PRINTI	" stops glowing."
	CRLF	
?CND24:	CALL1	SAY-IF-NOT-LIT
	RSTACK	


	.FUNCT	I-SHELL-TALK
	DEC	'SHELL-SCRIPT
	ZERO?	SHELL-SCRIPT /?CTR2
	IN?	CONCH-SHELL,PROTAGONIST \?CTR2
	IN?	WISHBRINGER,PROTAGONIST /?CCL3
?CTR2:	CALL2	INT,I-SHELL-TALK
	PUT	STACK,0,0
	CALL2	VISIBLE?,CONCH-SHELL
	ZERO?	STACK /FALSE
	LESS?	SHELL-SCRIPT,4 \FALSE
	ICALL2	THIS-IS-IT,CONCH-SHELL
	CRLF	
	PRINTI	"The buzzing sound in the "
	PRINTD	CONCH-SHELL
	PRINTR	" stops."
?CCL3:	EQUAL?	SHELL-SCRIPT,4 \?CCL15
	ICALL2	THIS-IS-IT,CONCH-SHELL
	CRLF	
	PRINT	YOU-HEAR
	PRINTI	"a faint buzzing sound, like an overheard telephone, coming from the "
	PRINTD	CONCH-SHELL
	PRINTR	"."
?CCL15:	EQUAL?	SHELL-SCRIPT,2 \FALSE
	ICALL2	THIS-IS-IT,CONCH-SHELL
	CRLF	
	PRINTC	40
	ICALL2	SAY-THE,CONCH-SHELL
	PRINTR	" is still buzzing. Maybe you should listen to it.)"


	.FUNCT	TO-N
	GET	DIR-NAMES,0
	RSTACK	


	.FUNCT	TO-S
	GET	DIR-NAMES,1
	RSTACK	


	.FUNCT	TO-E
	GET	DIR-NAMES,2
	RSTACK	


	.FUNCT	I-BOOT-PATROL,DIR-INDEX,DIR-TABLE,PLACE,WHERE-BOOTS
	ZERO?	ECLIPSE? \TRUE
	EQUAL?	LAST-PLACE,HERE \?CCL5
	LOC	BOOTS >WHERE-BOOTS
	ZERO?	FUZZY? /?CND6
	EQUAL?	FUZZY-FROM,WHERE-BOOTS \?CND6
	CRLF	
	PRINTI	"The fuzzy"
	ICALL1	TRAMP
	PRINTI	"fades away."
	CRLF	
?CND6:	IGRTR?	'BOOT-LOC,BOOT-MAX \?CND14
	SET	'BOOT-LOC,0
?CND14:	GET	BOOT-PATH,BOOT-LOC >WHERE-BOOTS
	MOVE	BOOTS,WHERE-BOOTS
	JUMP	?CND3
?CCL5:	LOC	BOOTS >WHERE-BOOTS
	SET	'LAST-PLACE,HERE
?CND3:	ZERO?	FUZZY? /?CND16
	EQUAL?	FUZZY-FROM,WHERE-BOOTS \?CND16
	CRLF	
	PRINT	YOU-HEAR
	PRINTI	"the"
	ICALL1	TRAMP
	PRINTR	"all around you. But the sound is fuzzy and oddly distant."
?CND16:	EQUAL?	HERE,WHERE-BOOTS \?CND24
	ICALL1	DEPOSIT-BRANCH
	CRLF	
	PRINTI	"The night is filled with rhythmic thunder, and a platoon of gigantic leather army "
	PRINTD	BOOTS
	PRINTI	" marches into view. It's the Boot Patrol"
	ZERO?	JAIL-VISITS /?PRG32
	PRINTI	" again"
?PRG32:	PRINTI	"!

You're immediately surrounded, tied, gagged and dragged before an especially tall Boot. "
	ZERO?	JAIL-VISITS \?CCL36
	PRINTI	"""What have we here?"" he hisses. ""Out after curfew? Tsk, tsk, tsk. I wonder what "
	PRINTD	MACGUFFIN
	PRINTI	" will say about this."""
	JUMP	?CND34
?CCL36:	EQUAL?	JAIL-VISITS,1 \?PRG43
	PRINTI	"""What!"" he cries. ""I thought you were locked up with "
	PRINTD	MACGUFFIN
	PRINTI	". Tsk, tsk."""
	JUMP	?CND34
?PRG43:	PRINTI	"""Escaped again!"" He looks around at the silent platoon. ""We don't want to bother "
	PRINTD	MACGUFFIN
	ICALL1	SHARK-SNACK
?CND34:	ICALL1	THROWN-OVER-SHOULDER
	EQUAL?	JAIL-VISITS,0,1 \?CCL47
	PRINTI	"the "
	PRINTD	GLOBBY
	PRINTI	" of the "
	PRINTD	INSIDE-POLICE-STATION
	PRINTC	46
	CRLF	
	CRLF	
	PRINTD	MACGUFFIN
	PRINTI	" glares at you as the "
	PRINTD	BOOTS
	PRINTI	" dump you on the floor. "
	ZERO?	JAIL-VISITS \?PRG55
	PRINTI	"""What's this?"" he demands impatiently.

""A nightcrawler,"" hisses the Tall Boot, giving you a vicious little kick. ""Outside after curfew. Shall I feed it to the "
	PRINTD	SHARKS
	PRINTI	"?"""
	CRLF	
	CRLF	
	PRINTD	MACGUFFIN
	PRINTI	" shakes his head. ""Later. The Tower wants all prisoners held for questioning."" He turns back to his work. ""Cell Three."""
	JUMP	?CND50
?PRG55:	PRINTI	"His eyes narrow when he sees you. "
	ICALL1	JAIL-AGAIN
?CND50:	ICALL1	TO-JAIL
	RTRUE	
?CCL47:	ICALL1	INTO-BAY
	RTRUE	
?CND24:	SET	'DIR-INDEX,0
	GET	DIRECTION-TABLES,BOOT-LOC >DIR-TABLE
?PRG57:	GRTR?	DIR-INDEX,DIR-MAX /TRUE
	GET	DIR-TABLE,DIR-INDEX >PLACE
	EQUAL?	PLACE,PARK \?CND61
	EQUAL?	DIR-INDEX,0,1 \?CCL65
	EQUAL?	HERE,ROTARY-WEST,ROTARY-EAST \?CCL65
	SET	'PLACE,HERE
	JUMP	?CND61
?CCL65:	EQUAL?	DIR-INDEX,2,3 \?CND61
	EQUAL?	HERE,ROTARY-NORTH,ROTARY-SOUTH \?CND61
	SET	'PLACE,HERE
?CND61:	EQUAL?	HERE,PLACE \?CND71
	ICALL2	THIS-IS-IT,BOOTS
	CRLF	
	PRINT	YOU-HEAR
	PRINTI	"the"
	ICALL1	TRAMP
	GET	DIR-NAMES,DIR-INDEX
	PRINT	STACK
	PRINTC	46
	ADD	BOOT-LOC,1
	GET	BOOT-PATH,STACK
	EQUAL?	HERE,STACK \?CND77
	ICALL1	COMING-THIS-WAY
?CND77:	CRLF	
	RTRUE	
?CND71:	INC	'DIR-INDEX
	JUMP	?PRG57


	.FUNCT	I-JAIL
	ZERO?	FUZZY? \TRUE
	ZERO?	ECLIPSE? \TRUE
	EQUAL?	HERE,JAIL-CELL \FALSE
	DEC	'JAIL-SCRIPT
	EQUAL?	JAIL-SCRIPT,8 \?CCL10
	CRLF	
	PRINT	YOU-HEAR
	ICALL1	EVIL-VOICES
	PRINTR	"."
?CCL10:	EQUAL?	JAIL-SCRIPT,6,3 \?CCL16
	CRLF	
	PRINTI	"The "
	ICALL1	EVIL-VOICES
	PRINTR	" laugh among themselves."
?CCL16:	EQUAL?	JAIL-SCRIPT,5 \?CCL22
	CRLF	
	PRINTI	"One of the "
	ICALL1	EVIL-VOICES
	PRINTR	" just mentioned your name!"
?CCL22:	EQUAL?	JAIL-SCRIPT,2 \?CCL28
	CRLF	
	PRINT	YOU-HEAR
	PRINTI	"the"
	ICALL1	TRAMP
	PRINTI	"in the "
	PRINTD	CORRIDOR
	PRINTI	" outside."
	ICALL1	COMING-THIS-WAY
	CRLF	
	RTRUE	
?CCL28:	EQUAL?	JAIL-SCRIPT,1 \?CCL34
	CRLF	
	PRINTI	"Uh-oh. Somebody's unlocking your "
	PRINTD	CELL-DOOR
	PRINTR	"!"
?CCL34:	ZERO?	JAIL-SCRIPT \?CCL38
	CRLF	
	PRINTI	"The door flies open, and a dozen giant army boots stride into your cell."
	ICALL1	THROWN-OVER-SHOULDER
	CALL1	TORTURE-ENDING
	RSTACK	
?CCL38:	EQUAL?	JAIL-SCRIPT,7,4 /?CCL42
	RANDOM	100
	LESS?	10,STACK /FALSE
?CCL42:	CRLF	
	CALL1	HEAR-WAILS
	RSTACK	


	.FUNCT	I-SMOKE
	EQUAL?	HERE,VIDEO-ARCADE \FALSE
	CALL2	INT,I-SMOKE
	PUT	STACK,0,0
	CRLF	
	PRINTR	"A vague electrical smell quickly fades."

	.ENDI
